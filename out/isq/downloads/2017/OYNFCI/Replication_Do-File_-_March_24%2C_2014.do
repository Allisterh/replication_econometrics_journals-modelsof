/**************************************************//**************************************************//*************** VARIABLE CODING ******************//**************************************************//**************************************************//******************//* Policy Support *//******************/gen refugees_policy=Q28-5/***********************//* Political Awareness *//***********************/gen pelosi_correct=0replace pelosi_correct=1 if Q21==3gen geithner_correct=0replace geithner_correct=1 if Q22x==1gen cantor_correct=0replace cantor_correct=1 if Q22y==4gen alito_correct=0replace alito_correct=1 if Q23==3gen info_plus=(pelosi_correct + geithner_correct + cantor_correct + alito_correct)+1/************************//* Party Identification *//************************/recode pid7 (8=.), gen(pid7_nodk)/************************//*  MANIPULATION DUMMIES:**************************American Pro-Source: prosource_americanBritish Pro-Source: prosource_britishFrench Pro-Source: prosource_frenchExpert Counter-Source: consource_expertDemocrat Counter-Source: consource_demRepublican Counter-Source: consource_gopImmigration Frame: frame_immigrantsInterference Frame: frame_interfere*//* British source, Immigration frame */gen british_immigrant = 0replace british_immigrant = 1 if prosource_british==1 & frame_immigrants==1/* French source, Immigration frame */gen french_immigrant = 0replace french_immigrant = 1 if prosource_french==1 & frame_immigrants==1/* British source, Interference frame */gen british_interfere = 0replace british_interfere = 1 if prosource_british==1 & frame_interfere==1/* French source, Interference frame */gen french_interfere = 0replace french_interfere = 1 if prosource_french==1 & frame_interfere==1/************************//******************//** Interactions **//******************/gen britishimm_X_pid7 = british_immigrant * pid7_nodkgen frenchimm_X_pid7 = french_immigrant * pid7_nodkgen britishint_X_pid7 = british_interfere * pid7_nodkgen frenchint_X_pid7 = french_interfere * pid7_nodkgen britishimm_X_infoplus = british_immigrant * info_plusgen frenchimm_X_infoplus = french_immigrant * info_plusgen britishint_X_infoplus = british_interfere * info_plusgen frenchint_X_infoplus = french_interfere * info_plusgen pid7_X_infoplus = pid7_nodk * info_plusgen britishimm_X_pid7_X_infoplus = british_immigrant * pid7_nodk * info_plusgen frenchimm_X_pid7_X_infoplus = french_immigrant * pid7_nodk * info_plusgen britishint_X_pid7_X_infoplus = british_interfere * pid7_nodk * info_plusgen frenchint_X_pid7_X_infoplus = french_interfere * pid7_nodk * info_plus/************************************************************************************************************************************//************************************************************************************************************************************//**********  TABLE 1:  Conditional Effects of British and French Nationality on Support for Increase in Refugees Intake *************//************************************************************************************************************************************//************************************************************************************************************************************//* EXPERT CONSOURCE - Model 1 */reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_expert==1)eststo/* GOP CONSOURCE - Model 2 */reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_gop==1) eststo/* DEM CONSOURCE - Model 3 */reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_dem==1)eststoesttab, r2eststo clear/************************************************************************************************//************************  PREDICTED EFFECTS & FIGURES FOR MODEL 1  *****************************//************************************************************************************************//******* NOTE: Because Clarify uses a simulation procedure, the point predictions in any run of the simulation will not be identicalto those reported in the article, but the pattern of results should be the same. ********/estsimp reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					 pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_expert==1)					setx meanlevelsof info_plus, local(info_values)levelsof pid7_nodk, local(pid_values)tempname predicted_probstempfile resultspostfile `predicted_probs' nationality INFO_value PID_value mean stderror lo_95 hi_95 using `results'/***  IMMIGRANT FRAME  ***/setx british_interfere 0 french_interfere 0 britishint_X_pid7 0 frenchint_X_pid7 0 britishint_X_infoplus 0 ///		frenchint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 frenchint_X_pid7_X_infoplus 0	/**  BRITISH ESTIMATES   **/setx french_immigrant 0 frenchimm_X_pid7 0 frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0local nation=1/* 1 = british, immigrant  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_immigrant 0 1 britishimm_X_pid7 0 `pid_val' britishimm_X_infoplus 0 `info_val' britishimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 0  britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 `pid_val' britishimm_X_infoplus `info_val' britishimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}	/**  FRENCH ESTIMATES  **/setx british_immigrant 0 britishimm_X_pid7 0 britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0local nation=2/*  2 = french, immigrant frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_immigrant 0 1 frenchimm_X_pid7 0 `pid_val' frenchimm_X_infoplus 0 `info_val' frenchimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 0  frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 `pid_val' frenchimm_X_infoplus `info_val' frenchimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/***  Interference FRAME  ***/setx british_immigrant 0 french_immigrant 0 britishimm_X_pid7 0 frenchimm_X_pid7 0 britishimm_X_infoplus 0 ///		frenchimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0	/**  BRITISH ESTIMATES   **/setx french_interfere 0 frenchint_X_pid7 0 frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0local nation=3/* 3 = british, interference  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_interfere 0 1 britishint_X_pid7 0 `pid_val' britishint_X_infoplus 0 `info_val' britishint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 0  britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 `pid_val' britishint_X_infoplus `info_val' britishint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}	/**  FRENCH ESTIMATES  **/setx british_interfere 0 britishint_X_pid7 0 britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0local nation=4/*  4 = french, inteference frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_interfere 0 1 frenchint_X_pid7 0 `pid_val' frenchint_X_infoplus 0 `info_val' frenchint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 0  frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 `pid_val' frenchint_X_infoplus `info_val' frenchint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}postclose `predicted_probs'clearuse `results'gen refline=0label define party 1 "Strong Democrat" 2 "Not very strong Democrat" 3 "Lean Democrat" 4 "Independent" 5 "Lean Republican" 6 "Not very strong Republican" 7 "Strong Republican"label values PID_value partygraph twoway (line mean lo_95 hi_95 refline PID_value if nation==1, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Expert Con-Source") ///			     title("Figure 1: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==2, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Expert Con-Source") ///			     title("Figure 2: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==3, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Expert Con-Source") ///			     title("Figure 3: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Interference Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==4, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Expert Con-Source") ///			     title("Figure 4: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Interference Frame)" - 2 "95% Confidence Interval"))/** CLEAR AND RE-LOAD REPLICATION DATA  **//************************************************************************************************//************************  PREDICTED EFFECTS & FIGURES FOR MODEL 2  *****************************//************************************************************************************************//** Figures A1-A4 in Supplementary Materials **//******* NOTE: Because Clarify uses a simulation procedure, the point predictions in any run of the simulation will not be identicalto those reported in the article, but the pattern of results should be the same. ********/estsimp reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					 pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_gop==1)					setx meanlevelsof info_plus, local(info_values)levelsof pid7_nodk, local(pid_values)tempname predicted_probstempfile resultspostfile `predicted_probs' nationality INFO_value PID_value mean stderror lo_95 hi_95 using `results'/***  IMMIGRANT FRAME  ***/setx british_interfere 0 french_interfere 0 britishint_X_pid7 0 frenchint_X_pid7 0 britishint_X_infoplus 0 ///		frenchint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 frenchint_X_pid7_X_infoplus 0/**  BRITISH ESTIMATES   **/setx french_immigrant 0 frenchimm_X_pid7 0 frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0local nation=1/* 1 = british, immigrant  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_immigrant 0 1 britishimm_X_pid7 0 `pid_val' britishimm_X_infoplus 0 `info_val' britishimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 0  britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 `pid_val' britishimm_X_infoplus `info_val' britishimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/**  FRENCH ESTIMATES  **/setx british_immigrant 0 britishimm_X_pid7 0 britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0local nation=2/*  2 = french, immigrant frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_immigrant 0 1 frenchimm_X_pid7 0 `pid_val' frenchimm_X_infoplus 0 `info_val' frenchimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 0  frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 `pid_val' frenchimm_X_infoplus `info_val' frenchimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/***  Interference FRAME  ***/setx british_immigrant 0 french_immigrant 0 britishimm_X_pid7 0 frenchimm_X_pid7 0 britishimm_X_infoplus 0 ///		frenchimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0/**  BRITISH ESTIMATES   **/setx french_interfere 0 frenchint_X_pid7 0 frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0local nation=3/* 3 = british, interference  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_interfere 0 1 britishint_X_pid7 0 `pid_val' britishint_X_infoplus 0 `info_val' britishint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 0  britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 `pid_val' britishint_X_infoplus `info_val' britishint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/**  FRENCH ESTIMATES  **/setx british_interfere 0 britishint_X_pid7 0 britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0local nation=4/*  4 = french, inteference frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_interfere 0 1 frenchint_X_pid7 0 `pid_val' frenchint_X_infoplus 0 `info_val' frenchint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 0  frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 `pid_val' frenchint_X_infoplus `info_val' frenchint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}postclose `predicted_probs'clearuse `results'gen refline=0label define party 1 "Strong Democrat" 2 "Not very strong Democrat" 3 "Lean Democrat" 4 "Independent" 5 "Lean Republican" 6 "Not very strong Republican" 7 "Strong Republican"label values PID_value partygraph twoway (line mean lo_95 hi_95 refline PID_value if nation==1, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs GOP Con-Source") ///			     title("Figure A1: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==2, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs GOP Con-Source") ///			     title("Figure A2: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==3, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs GOP Con-Source") ///			     title("Figure A3: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Interference Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==4, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs GOP Con-Source") ///			     title("Figure A4: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Interference Frame)" - 2 "95% Confidence Interval"))/** CLEAR AND RE-LOAD REPLICATION DATA  **//************************************************************************************************//************************  PREDICTED EFFECTS & FIGURES FOR MODEL 3  *****************************//************************************************************************************************//** Figures A5-A8 in Supplementary Materials **//******* NOTE: Because Clarify uses a simulation procedure, the point predictions in any run of the simulation will not be identicalto those reported in the article, but the pattern of results should be the same. ********/estsimp reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///					 pid7_nodk britishimm_X_pid7 frenchimm_X_pid7 britishint_X_pid7 frenchint_X_pid7 ///					info_plus pid7_X_infoplus britishimm_X_infoplus frenchimm_X_infoplus britishint_X_infoplus frenchint_X_infoplus ///					britishimm_X_pid7_X_infoplus frenchimm_X_pid7_X_infoplus britishint_X_pid7_X_infoplus frenchint_X_pid7_X_infoplus ///					if (consource_dem==1)					setx meanlevelsof info_plus, local(info_values)levelsof pid7_nodk, local(pid_values)tempname predicted_probstempfile resultspostfile `predicted_probs' nationality INFO_value PID_value mean stderror lo_95 hi_95 using `results'/***  IMMIGRANT FRAME  ***/setx british_interfere 0 french_interfere 0 britishint_X_pid7 0 frenchint_X_pid7 0 britishint_X_infoplus 0 ///		frenchint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 frenchint_X_pid7_X_infoplus 0/**  BRITISH ESTIMATES   **/setx french_immigrant 0 frenchimm_X_pid7 0 frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0local nation=1/* 1 = british, immigrant  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_immigrant 0 1 britishimm_X_pid7 0 `pid_val' britishimm_X_infoplus 0 `info_val' britishimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 0  britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishimm_X_pid7 `pid_val' britishimm_X_infoplus `info_val' britishimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/**  FRENCH ESTIMATES  **/setx british_immigrant 0 britishimm_X_pid7 0 britishimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0local nation=2/*  2 = french, immigrant frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_immigrant 0 1 frenchimm_X_pid7 0 `pid_val' frenchimm_X_infoplus 0 `info_val' frenchimm_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_immigrant 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 0  frenchimm_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_immigrant 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchimm_X_pid7 `pid_val' frenchimm_X_infoplus `info_val' frenchimm_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/***  Interference FRAME  ***/setx british_immigrant 0 french_immigrant 0 britishimm_X_pid7 0 frenchimm_X_pid7 0 britishimm_X_infoplus 0 ///		frenchimm_X_infoplus 0 britishimm_X_pid7_X_infoplus 0 frenchimm_X_pid7_X_infoplus 0/**  BRITISH ESTIMATES   **/setx french_interfere 0 frenchint_X_pid7 0 frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0local nation=3/* 3 = british, interference  */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(british_interfere 0 1 britishint_X_pid7 0 `pid_val' britishint_X_infoplus 0 `info_val' britishint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx british_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 0  britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx british_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			britishint_X_pid7 `pid_val' britishint_X_infoplus `info_val' britishint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}/**  FRENCH ESTIMATES  **/setx british_interfere 0 britishint_X_pid7 0 britishint_X_infoplus 0 britishint_X_pid7_X_infoplus 0local nation=4/*  4 = french, inteference frame */foreach info_val of local info_values {	foreach pid_val of local pid_values {		setx  pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val')		simqi, fd(ev) changex(french_interfere 0 1 frenchint_X_pid7 0 `pid_val' frenchint_X_infoplus 0 `info_val' frenchint_X_pid7_X_infoplus 0 (`pid_val' * `info_val'))		setx french_interfere 0 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 0  frenchint_X_infoplus 0 frenchint_X_pid7_X_infoplus 0 				quietly simqi, ev genev(Pred0_pid`pid_val'_info`info_val')				setx french_interfere 1 pid7_nodk `pid_val' info_plus `info_val' pid7_X_infoplus (`pid_val' * `info_val') ///			frenchint_X_pid7 `pid_val' frenchint_X_infoplus `info_val' frenchint_X_pid7_X_infoplus (`pid_val' * `info_val')				quietly simqi, ev genev(Pred1_pid`pid_val'_info`info_val')				gen diff= (Pred1_pid`pid_val'_info`info_val') - (Pred0_pid`pid_val'_info`info_val')				quietly summ diff				local mean=r(mean)				local stderror=r(sd)				sort diff				local lo_95 = (diff[025]+diff[026])/2		local hi_95 = (diff[975]+diff[976])/2				post `predicted_probs' (`nation') (`info_val') (`pid_val') (`mean') (`stderror') (`lo_95') (`hi_95')				drop diff Pred1_pid`pid_val'_info`info_val' Pred0_pid`pid_val'_info`info_val'	}}postclose `predicted_probs'clearuse `results'gen refline=0label define party 1 "Strong Democrat" 2 "Not very strong Democrat" 3 "Lean Democrat" 4 "Independent" 5 "Lean Republican" 6 "Not very strong Republican" 7 "Strong Republican"label values PID_value partygraph twoway (line mean lo_95 hi_95 refline PID_value if nation==1, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Dem Con-Source") ///			     title("Figure A5: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==2, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Dem Con-Source") ///			     title("Figure A6: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Immigration Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==3, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Dem Con-Source") ///			     title("Figure A7: Effect of British Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to British cue (Interference Frame)" - 2 "95% Confidence Interval"))graph twoway (line mean lo_95 hi_95 refline PID_value if nation==4, ///			     by(INFO_value, ///			     note("Graphs by Level of Political Awareness. Condition: Institute vs Dem Con-Source") ///			     title("Figure A8: Effect of French Nationality on Refugee Policy Preference", size(medium)) ///			     iyaxes ///			     ixaxes ) ///			     xtitle("Identification with Republican Party") ///			     ytitle("Predicted Change in Support") ///			     clcolor(navy navy navy red) clpattern(solid dash dash solid) clwidth(thick thin thin thin) ///					), ///				legend( order(1 "Change in support due to French cue (Interference Frame)" - 2 "95% Confidence Interval"))/**************************************************//**************************************************//********** SUPPLEMENTARY MATERIALS ***************//**************************************************//**************************************************//*******************************************************************************************//****  TABLE A1:  Mean support for increasing refugee intake by experimental condition  ****//*******************************************************************************************/	/**  IMMIGRANT FRAME  **/	/* British */summ refugees_policy if (frame_immigrant==1) & (consource_expert==1) & prosource_british==1summ refugees_policy if (frame_immigrant==1) & (consource_gop==1) & prosource_british==1summ refugees_policy if (frame_immigrant==1) & (consource_dem==1) & prosource_british==1	/* French */summ refugees_policy if (frame_immigrant==1) & (consource_expert==1) & prosource_french==1summ refugees_policy if (frame_immigrant==1) & (consource_gop==1) & prosource_french==1summ refugees_policy if (frame_immigrant==1) & (consource_dem==1) & prosource_french==1	/* American */summ refugees_policy if (frame_immigrant==1) & (consource_expert==1) & prosource_american==1summ refugees_policy if (frame_immigrant==1) & (consource_gop==1) & prosource_american==1summ refugees_policy if (frame_immigrant==1) & (consource_dem==1) & prosource_american==1	/**  INTERFERENCE FRAME  **/		/* British */summ refugees_policy if (frame_interfere==1) & (consource_expert==1) & prosource_british==1summ refugees_policy if (frame_interfere==1) & (consource_gop==1) & prosource_british==1summ refugees_policy if (frame_interfere==1) & (consource_dem==1) & prosource_british==1	/* French */summ refugees_policy if (frame_interfere==1) & (consource_expert==1) & prosource_french==1summ refugees_policy if (frame_interfere==1) & (consource_gop==1) & prosource_french==1summ refugees_policy if (frame_interfere==1) & (consource_dem==1) & prosource_french==1/*********************************************************************************************//***  TABLE A2: Effect of British and French Nationality Cues on Refugee Policy Attitudes  ***//*********************************************************************************************/reg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///		if (consource_expert==1)eststoreg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///		if (consource_gop==1)eststoreg refugees_policy british_immigrant french_immigrant british_interfere french_interfere ///		if (consource_dem==1)eststoesttab, r2eststo clear