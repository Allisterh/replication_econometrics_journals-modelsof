***Do file for "Bank Regulation, Macroeconomic Management, and Monetary Incentives in OECD Economies"******International Studies Quarterly******Prepared by W. Kindred Winecoff***clear set more offset mem 300mcd "~/RegCenBank"***Note: The BankScope data is proprietary, but here is the code to aggregate it.******Country-year means are included in the .dta file***insheet using BankScope.csvsave BankScope.dta, replace emptyok***Rename Variables using BankScope Manual; destring***rename special insttypegen totcapratio = real(data2125)gen tier1ratio = real(data2130)rename data5670 totassetsgen totequity = real(data6400)gen eqtoassetsratio = real(data4009)gen interbankratio = real(data4031)drop bvdidnum specia2 release inflat data2125 data2130 data6400 data4009 data4031 encode insttype, gen(insttype1)drop insttyperename insttype1 insttypeencode listins, gen(listins1)drop listinsrename listins1 listinsreplace listins=0 if listins==.***Subset banks, keeping Bank Holding Corp (1), commercial (4), investment (9)******Also subset out investment (by suggestion of reviewer)******Results do not substantially change if investment banks are included.***Central Bank:drop if insttype==2***Clearing Institutions/Custodydrop if insttype==3***Cooperative:drop if insttype==5***Finance Companies: drop if insttype==6***Group Finance Com:drop if insttype==7***Investment and Trust Corporationsdrop if insttype==8***Investment Banks:drop if insttype==9***Islamic Banks:drop if insttype==10***Microfinance Institutions: drop if insttype==11***Multi Governmental Bank:drop if insttype==12***Other Non-Banking Credit Institution:drop if insttype==13***Private Bank/Asset Mgt Companies:drop if insttype==14***Real Estate/Mortgage Bank:drop if insttype==15***Savings:drop if insttype==16***Securities Firm:drop if insttype==17***Specialized Gov Credit Inst:drop if insttype==18save BankScope.dta, replace***Need to ssc install kountry if not already installed.***kountry country,from(other)drop countryrename NAMES_STD countrygen year1=date(closdate,"YMD",2000)format year1 %tdgen year = year(year1)drop year1gen newtotassets=0replace newtotassets=totassets if unit==6replace newtotassets=totassets/1000 if unit==9replace newtotassets=totassets/1000000 if unit==12replace newtotassets=totassets*1000 if unit==3***In millions***replace newtotassets=newtotassets*exrate_usddrop totassetssave BankScope.dta,replace***Preparing to collapse***drop closdate name exrate_usd unit_text unit interbankratio listins insttype currencysort country year***Create macro to keep variable names after collapse***foreach v of var * {	local l`v' : variable label `v'       if `"`l`v''"' == "" {		local l`v' "`v'" 	} } collapse(mean) totcapratio tier1ratio totequity eqtoassetsratio (sum) newtotassets, by(country year)***Attach names after collapse***foreach v of var * {	label var `v' "`l`v''"	 }save BankScopeCollapse.dta, replace emptyok ***Create dummies***gen OECD=0replace OECD=1 if country=="Australia"replace OECD=1 if country=="Austria"replace OECD=1 if country=="Belgium"replace OECD=1 if country=="Canada"replace OECD=1 if country=="Denmark"replace OECD=1 if country=="Finland"replace OECD=1 if country=="France"replace OECD=1 if country=="Germany"replace OECD=1 if country=="Greece"replace OECD=1 if country=="Iceland"replace OECD=1 if country=="Ireland"replace OECD=1 if country=="Italy"replace OECD=1 if country=="Japan"replace OECD=1 if country=="Luxembourg"replace OECD=1 if country=="Netherlands"replace OECD=1 if country=="New Zealand"replace OECD=1 if country=="Norway"replace OECD=1 if country=="Portugal"replace OECD=1 if country=="Spain"replace OECD=1 if country=="Sweden"replace OECD=1 if country=="Switzerland"replace OECD=1 if country=="Turkey"replace OECD=1 if country=="United Kingdom"replace OECD=1 if country=="United States"replace OECD=1 if country=="Czech Republic" & year>1994replace OECD=1 if country=="Hungary" & year>1995replace OECD=1 if country=="South Korea" & year>1995replace OECD=1 if country=="Mexico" & year>1993replace OECD=1 if country=="Poland" & year>1995replace OECD=1 if country=="Slovak Republic" & year>1999replace OECD=1 if country=="Chile" & year>2009replace OECD=1 if country=="Estonia" & year>2009replace OECD=1 if country=="Israel" & year>2009replace OECD=1 if country=="Slovenia" & year>2009gen Regulator=0replace Regulator=1 if country=="Austria"replace Regulator=1 if country=="France"***Bundesbank is supervisory only******replace Regulator=0 if country=="Germany"***replace Regulator=1 if country=="Greece"replace Regulator=1 if country=="Ireland"replace Regulator=1 if country=="Italy"replace Regulator=1 if country=="Netherlands"replace Regulator=1 if country=="New Zealand"replace Regulator=1 if country=="Portugal"replace Regulator=1 if country=="Spain"replace Regulator=1 if country=="United States"replace Regulator=1 if country=="Australia" & year<1999replace Regulator=1 if country=="Iceland" & year<1999replace Regulator=1 if country=="Luxembourg" & year<1999replace Regulator=1 if country=="Turkey" & year<2000replace Regulator=1 if country=="Hungary"replace Regulator=1 if country=="Slovak Republic"replace Regulator=1 if country=="South Korea" & year<1999replace Regulator=1 if country=="Czech Republic"replace Regulator=1 if country=="United Kingdom" & year<2001replace Regulator=1 if country=="Estonia"replace Regulator=1 if country=="Israel"replace Regulator=1 if country=="Slovenia"replace Regulator=1 if country=="Belgium" & year>2010***These data come from Laeven-Valencia***gen BankCrisis=0replace BankCrisis=1 if country=="Czech Republic" & year>1995 & year<2001replace BankCrisis=1 if country=="Finland" & year>1990 & year<1996replace BankCrisis=1 if country=="Hungary" & year>1990 & year<1996replace BankCrisis=1 if country=="Japan" & year>1996 & year<2002replace BankCrisis=1 if country=="Mexico" & year>1993 & year<1997replace BankCrisis=1 if country=="Norway" & year>1990 & year<1994replace BankCrisis=1 if country=="Poland" & year>1991 & year<1995replace BankCrisis=1 if country=="Slovak Republic" & year>1997 & year<2003replace BankCrisis=1 if country=="Slovenia" & year==1992replace BankCrisis=1 if country=="Slovenia" & year>2007replace BankCrisis=1 if country=="South Korea" & year>1996 & year<1999replace BankCrisis=1 if country=="Sweden" & year>1990 & year<1996replace BankCrisis=1 if country=="Turkey" & year>1999 & year<2002replace BankCrisis=1 if country=="United Kingdom" & year>2006replace BankCrisis=1 if country=="United States" & year>2006replace BankCrisis=1 if country=="Austria" & year>2007replace BankCrisis=1 if country=="Belgium" & year>2007replace BankCrisis=1 if country=="Denmark" & year>2007replace BankCrisis=1 if country=="Germany" & year>2007replace BankCrisis=1 if country=="Greece" & year>2007replace BankCrisis=1 if country=="Iceland" & year>2007replace BankCrisis=1 if country=="Ireland" & year>2007replace BankCrisis=1 if country=="Luxembourg" & year>2007replace BankCrisis=1 if country=="Netherlands" & year>2007replace BankCrisis=1 if country=="Spain" & year>2007replace BankCrisis=1 if country=="France" & year>2007replace BankCrisis=1 if country=="Hungary" & year>2007replace BankCrisis=1 if country=="Italy" & year>2007replace BankCrisis=1 if country=="Portugal" & year>2007replace BankCrisis=1 if country=="Sweden" & year>2007replace BankCrisis=1 if country=="Switzerland" & year>2007gen EMU=0replace EMU=1 if country=="Austria" & year>1998replace EMU=1 if country=="Belgium" & year>1998***Denmark is in ERM-II, pegged to euro but not officially a part of it.******replace EMU=1 if country=="Denmark" & year>1998replace EMU=1 if country=="Finland" & year>1998replace EMU=1 if country=="France" & year>1998replace EMU=1 if country=="Germany" & year>1998replace EMU=1 if country=="Greece" & year>2000replace EMU=1 if country=="Ireland" & year>1998replace EMU=1 if country=="Italy" & year>1998replace EMU=1 if country=="Luxembourg" & year>1998replace EMU=1 if country=="Netherlands" & year>1998replace EMU=1 if country=="Portugal" & year>1998replace EMU=1 if country=="Spain" & year>1998replace EMU=1 if country=="Slovenia" & year>2006replace EMU=1 if country=="Cyprus" & year>2007replace EMU=1 if country=="Malta" & year>2007replace EMU=1 if country=="Slovak Republic" & year>2008replace EMU=1 if country=="Estonia" & year>2010save BankScopeOECDCollapse.dta, replace emptyok***Trilemma from Aizenmann-Chinn-Ito***merge country year using "/Users/williamwinecoff/Documents/PhD/Data/Trilemma/Trilemma.dta"drop if _merge==2drop cn _merge***Fix n-1 problem***replace ka_open=1 if country=="United States"replace ers=1 if country=="United States"replace mi=1 if country=="United States"save BankScopeOECDCollapse.dta, replace***Variables from World Bank World Development Indicators***clearinsheet using bWDI.csvkountry country, from(other)drop countryrename NAMES_STD countrysort country yearsave bWDI.dta,replace emptyokclearuse BankScopeOECDCollapse.dtasort country yearmerge country year using bWDI.dtadrop if _merge==2drop _mergesort country yearsave BankScopeOECDCollapse.dta, replace***Sovereign Interest Rate, from OECD***clearinsheet using SovIntOECDClean.csvkountry country, from(other)drop countryrename NAMES_STD countrysort country yearsave SovIntOECDClean.dta,replace emptyokclearuse BankScopeOECDCollapse.dtasort country yearmerge country year using SovIntOECDClean.dta***No SovIntRate for Estonia, Turkey******EMU1=>less than 0.3235 (euroarea avg) drop in sovintrate from 1999-2007***gen EMU1=0replace EMU1=1 if country=="France" & year>1998replace EMU1=1 if country=="Germany" & year>1998replace EMU1=1 if country=="Italy" & year>1998replace EMU1=1 if country=="Slovak Republic" & year>2008replace EMU1=1 if country=="Estonia" & year>2010***From avg to 2xavg******EMU2=>in b/t 0.3235 and 0.6470***gen EMU2=0replace EMU2=1 if country=="Austria" & year>1998replace EMU2=1 if country=="Belgium" & year>1998***replace EMU2=1 if country=="Denmark" & year>1998******Denmark is in ERMII but not euro***replace EMU2=1 if country=="Finland" & year>1998replace EMU2=1 if country=="Ireland" & year>1998replace EMU2=1 if country=="Netherlands" & year>1998replace EMU2=1 if country=="Portugal" & year>1998replace EMU2=1 if country=="Spain" & year>1998***EMU3=> greater than 0.6470***gen EMU3=0replace EMU3=1 if country=="Greece" & year>1998replace EMU3=1 if country=="Norway" & year>1998replace EMU3=1 if country=="Luxembourg" & year>1998***EMUa= countries that wld join euro***gen EMUa=0replace EMUa=1 if country=="Austria" replace EMUa=1 if country=="Belgium" replace EMUa=1 if country=="Finland" replace EMUa=1 if country=="France" replace EMUa=1 if country=="Germany" replace EMUa=1 if country=="Greece" replace EMUa=1 if country=="Ireland" replace EMUa=1 if country=="Italy" replace EMUa=1 if country=="Luxembourg" replace EMUa=1 if country=="Netherlands" replace EMUa=1 if country=="Portugal" replace EMUa=1 if country=="Spain" replace EMUa=1 if country=="Slovenia" replace EMUa=1 if country=="Cyprus" replace EMUa=1 if country=="Malta" replace EMUa=1 if country=="Slovak Republic" replace EMUa=1 if country=="Estonia" sum sovintrate if year>1994 & year<2006 & EMUa==1,d***Mean= 4.94833; SD=1.612******Below EMU median = 4.816***gen EMUa1995=0replace EMUa1995=1 if country=="Austria" & year>1998replace EMUa1995=1 if country=="Belgium" & year>1998replace EMUa1995=1 if country=="France" & year>1998replace EMUa1995=1 if country=="Germany" & year>1998replace EMUa1995=1 if country=="Netherlands" & year>1998replace EMUa1995=1 if country=="Slovak Republic" & year>2008***B/t median & median+st.dev=6.602***gen EMUb1995=0replace EMUb1995=1 if country=="Finland" & year>1998replace EMUb1995=1 if country=="Ireland" & year>1998replace EMUb1995=1 if country=="Luxembourg" & year>1998***Above 6.602***gen EMUc1995=0replace EMUc1995=1 if country=="Greece" & year>2000replace EMUc1995=1 if country=="Italy" & year>1998replace EMUc1995=1 if country=="Portugal" & year>1998replace EMUc1995=1 if country=="Spain" & year>1998replace OECD=1 if country=="euroarea"keep if OECD==1drop _mergesave BankScopeOECDCollapse.dta,replacedrop if year<1992drop if year>2011rename gdpgrowthannual gdpgrowthrename gdppercapitaconstant2000us realgdpcapitarename grossdomesticsavingsofgdp domsavingsrename currentaccountbalanceofgdp CApergdprename inflationconsumerpricesannual CPIrename inflationgdpdeflatorannual deflatorgen loggdpgrowth=log(gdpgrowth)gen logdeflator=log(deflator)gen logrealgdpcap=log(realgdpcapita)gen logtier1=log(tier1ratio)gen logtotcap=log(totcapratio)gen logeqass=log(eqtoassetsratio)***Interactions***gen REGxEMU=Regulator*EMUgen REGxEMU1=Regulator*EMU1gen REGxEMU2=Regulator*EMU2gen REGxEMU3=Regulator*EMU3gen REGxEMUa1995=Regulator*EMUa1995gen REGxEMUb1995=Regulator*EMUb1995gen REGxEMUc1995=Regulator*EMUc1995gen REGxERS=Regulator*ersgen REGxNTA=Regulator*newtotassetsgen REGxNTAxERS=Regulator*newtotassets*ersgen NTAxERS=newtotassets*ersencode country,gen(country_num)save BankScopeOECDCollapse.dta,replace**********************Basic Models***********************tsset country_num yeareststo: xtreg logtier1 Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtier1 Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtier1 Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) fe***Need to ssc install estout if not installed***estout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear**************************Graphs**********3way First************************xtreg logtier1 Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) fe***This is for ers:***gen MV=ers***Total Assets, from summary statistics***scalar totassetsmin=0.361946scalar totassets25=166025.1scalar totassets50=836436.3scalar totassets75=4860445scalar totassets90=6.89e+08scalar totassets95=4.83e+09scalar totassetsmax=1.34e+12matrix b=e(b)matrix V=e(V)scalar b1=b[1,1]scalar b2=b[1,2]scalar b3=b[1,3]scalar b4=b[1,4]scalar b5=b[1,5]scalar b6=b[1,6]scalar b7=b[1,7]scalar b8=b[1,8]scalar b9=b[1,9]scalar b10=b[1,10]scalar b11=b[1,11]scalar b12=b[1,12]scalar b13=b[1,13]scalar b14=b[1,14]scalar b15=b[1,15]scalar b16=b[1,16]scalar varb1=V[1,1]scalar varb2=V[2,2]scalar varb3=V[3,3]scalar varb4=V[4,4]scalar varb5=V[5,5]scalar varb6=V[6,6]scalar varb7=V[7,7]scalar varb8=V[8,8]scalar varb9=V[9,9]scalar varb10=V[10,10]scalar varb11=V[11,11]scalar varb12=V[12,12]scalar varb13=V[13,13]scalar varb14=V[14,14]scalar varb15=V[15,15]scalar varb16=V[16,16]scalar covb1b5=V[1,5]scalar covb1b7=V[1,7]scalar covb1b8=V[1,8]scalar covb5b7=V[5,7]scalar covb5b8=V[5,8]scalar covb7b8=V[7,8]scalar list b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 varb1 varb2 varb3 varb4 varb5 varb6 varb7 varb8 varb9 varb10 varb11 varb12 varb13 varb14 varb15 varb16 covb1b5 covb1b7 covb1b8 covb5b7 covb5b8 covb7b8gen conb0=b1+b5*MV+b7*totassetsmin+b8*(MV*totassetsmin) gen conb1=b1+b5*MV+b7*totassets25+b8*(MV*totassets25) gen conb2=b1+b5*MV+b7*totassets50+b8*(MV*totassets50) gen conb3=b1+b5*MV+b7*totassets75+b8*(MV*totassets75)gen conb4=b1+b5*MV+b7*totassets90+b8*(MV*totassets90) gen conb5=b1+b5*MV+b7*totassets95+b8*(MV*totassets95) gen conb6=b1+b5*MV+b7*totassetsmax+b8*(MV*totassetsmax) gen conse0=sqrt(varb1 + varb5*(MV^2) + varb7*(totassetsmin^2) + varb8*(MV^2)*(totassetsmin^2) + 2*MV*covb1b5 + 2*totassetsmin*covb1b7 + 2*MV*totassetsmin*covb1b7 + 2*MV*totassetsmin*covb5b7 + 2*totassetsmin*(MV^2)*covb5b8 + 2*(totassetsmin^2)*MV*covb7b8)               gen conse1=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets25^2) + varb8*(MV^2)*(totassets25^2) + 2*MV*covb1b5 + 2*totassets25*covb1b7 + 2*MV*totassets25*covb1b7 + 2*MV*totassets25*covb5b7 + 2*totassets25*(MV^2)*covb5b8 + 2*(totassets25^2)*MV*covb7b8) gen conse2=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets50^2) + varb8*(MV^2)*(totassets50^2) + 2*MV*covb1b5 + 2*totassets50*covb1b7 + 2*MV*totassets50*covb1b7 + 2*MV*totassets50*covb5b7 + 2*totassets50*(MV^2)*covb5b8 + 2*(totassets50^2)*MV*covb7b8) gen conse3=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets75^2) + varb8*(MV^2)*(totassets75^2) + 2*MV*covb1b5 + 2*totassets75*covb1b7 + 2*MV*totassets75*covb1b7 + 2*MV*totassets75*covb5b7 + 2*totassets75*(MV^2)*covb5b8 + 2*(totassets75^2)*MV*covb7b8) gen conse4=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets90^2) + varb8*(MV^2)*(totassets90^2) + 2*MV*covb1b5 + 2*totassets90*covb1b7 + 2*MV*totassets90*covb1b7 + 2*MV*totassets90*covb5b7 + 2*totassets90*(MV^2)*covb5b8 + 2*(totassets90^2)*MV*covb7b8) gen conse5=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets95^2) + varb8*(MV^2)*(totassets95^2) + 2*MV*covb1b5 + 2*totassets95*covb1b7 + 2*MV*totassets95*covb1b7 + 2*MV*totassets95*covb5b7 + 2*totassets95*(MV^2)*covb5b8 + 2*(totassets95^2)*MV*covb7b8) gen conse6=sqrt(varb1 + varb5*(MV^2) + varb7*(totassetsmax^2) + varb8*(MV^2)*(totassetsmax^2) + 2*MV*covb1b5 + 2*totassetsmax*covb1b7 + 2*MV*NTAMax*covb1b7 + 2*MV*totassetsmax*covb5b7 + 2*totassetsmax*(MV^2)*covb5b8 + 2*(totassetsmax^2)*MV*covb7b8) gen t0=conb0/conse0gen t1=conb1/conse1gen t2=conb2/conse2gen t3=conb3/conse3gen t4=conb4/conse4gen t5=conb5/conse5gen t6=conb6/conse6gen consb0=conb0gen consb1=conb1gen consb2=conb2gen consb3=conb3gen consb4=conb4gen consb5=conb5gen consb6=conb6replace consb0 = . if abs(t0)<1.96replace consb1 = . if abs(t1)<1.96replace consb2 = . if abs(t2)<1.96replace consb3 = . if abs(t3)<1.96replace consb4 = . if abs(t4)<1.96replace consb5 = . if abs(t5)<1.96replace consb6 = . if abs(t6)<1.96generate str1 txt="*"graph twoway line conb0 MV, clpattern(shortdash) clwidth(thin) || scatter consb0 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb1 MV, clpattern(dot) clwidth(thin) || scatter consb1 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb2 MV, clpattern(solid) clwidth(thin) || scatter consb2 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb3 MV, clpattern(longdash) clwidth(thin) || scatter consb3 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb4 MV, clpattern(solid) clwidth(thin) || scatter consb4 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb5 MV, clpattern(longdash) clwidth(thin) || scatter consb5 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) ||, legend(off) xtitle(Exchange Rate Stability (1 = Most Stable), size(3)) ytitle(Marginal Effect of Regulator, size(3)) xsca(titlegap(2)) ysca(titlegap(4)) text(0.055 0.80 "Total Assets = 95th percentile", justification(right) size(2.5)) text(-0.10 0.8 "Total Assets = Min - 75th percentile", justification(right) size(2.5)) text(-0.170 0.80 "Total Assets = 90th percentile", justification(right) size(2.5)) text(.085 .10 "* p < 0.05", justification(left) size(2.5)) scheme(s2mono) graphregion(fcolor(white))graph export threewayISQRR.eps,replace********************************Appendix Models and Graphs********************************************************************Same thing with logeqass***************************************clearuse BankScopeOECDCollapse.dtaxtreg logeqass Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) fe***This is for ers:***gen MV=ers***Total Assets***scalar totassetsmin=0.361946scalar totassets25=166025.1scalar totassets50=836436.3scalar totassets75=4860445scalar totassets90=6.89e+08scalar totassets95=4.83e+09scalar totassetsmax=1.34e+12matrix b=e(b)matrix V=e(V)scalar b1=b[1,1]scalar b2=b[1,2]scalar b3=b[1,3]scalar b4=b[1,4]scalar b5=b[1,5]scalar b6=b[1,6]scalar b7=b[1,7]scalar b8=b[1,8]scalar b9=b[1,9]scalar b10=b[1,10]scalar b11=b[1,11]scalar b12=b[1,12]scalar b13=b[1,13]scalar b14=b[1,14]scalar b15=b[1,15]scalar b16=b[1,16]scalar varb1=V[1,1]scalar varb2=V[2,2]scalar varb3=V[3,3]scalar varb4=V[4,4]scalar varb5=V[5,5]scalar varb6=V[6,6]scalar varb7=V[7,7]scalar varb8=V[8,8]scalar varb9=V[9,9]scalar varb10=V[10,10]scalar varb11=V[11,11]scalar varb12=V[12,12]scalar varb13=V[13,13]scalar varb14=V[14,14]scalar varb15=V[15,15]scalar varb16=V[16,16]scalar covb1b5=V[1,5]scalar covb1b7=V[1,7]scalar covb1b8=V[1,8]scalar covb5b7=V[5,7]scalar covb5b8=V[5,8]scalar covb7b8=V[7,8]scalar list b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 varb1 varb2 varb3 varb4 varb5 varb6 varb7 varb8 varb9 varb10 varb11 varb12 varb13 varb14 varb15 varb16 covb1b5 covb1b7 covb1b8 covb5b7 covb5b8 covb7b8gen conb0=b1+b5*MV+b7*totassetsmin+b8*(MV*totassetsmin) gen conb1=b1+b5*MV+b7*totassets25+b8*(MV*totassets25) gen conb2=b1+b5*MV+b7*totassets50+b8*(MV*totassets50) gen conb3=b1+b5*MV+b7*totassets75+b8*(MV*totassets75)gen conb4=b1+b5*MV+b7*totassets90+b8*(MV*totassets90) gen conb5=b1+b5*MV+b7*totassets95+b8*(MV*totassets95) gen conb6=b1+b5*MV+b7*totassetsmax+b8*(MV*totassetsmax) gen conse0=sqrt(varb1 + varb5*(MV^2) + varb7*(totassetsmin^2) + varb8*(MV^2)*(totassetsmin^2) + 2*MV*covb1b5 + 2*totassetsmin*covb1b7 + 2*MV*totassetsmin*covb1b7 + 2*MV*totassetsmin*covb5b7 + 2*totassetsmin*(MV^2)*covb5b8 + 2*(totassetsmin^2)*MV*covb7b8)               gen conse1=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets25^2) + varb8*(MV^2)*(totassets25^2) + 2*MV*covb1b5 + 2*totassets25*covb1b7 + 2*MV*totassets25*covb1b7 + 2*MV*totassets25*covb5b7 + 2*totassets25*(MV^2)*covb5b8 + 2*(totassets25^2)*MV*covb7b8) gen conse2=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets50^2) + varb8*(MV^2)*(totassets50^2) + 2*MV*covb1b5 + 2*totassets50*covb1b7 + 2*MV*totassets50*covb1b7 + 2*MV*totassets50*covb5b7 + 2*totassets50*(MV^2)*covb5b8 + 2*(totassets50^2)*MV*covb7b8) gen conse3=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets75^2) + varb8*(MV^2)*(totassets75^2) + 2*MV*covb1b5 + 2*totassets75*covb1b7 + 2*MV*totassets75*covb1b7 + 2*MV*totassets75*covb5b7 + 2*totassets75*(MV^2)*covb5b8 + 2*(totassets75^2)*MV*covb7b8) gen conse4=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets90^2) + varb8*(MV^2)*(totassets90^2) + 2*MV*covb1b5 + 2*totassets90*covb1b7 + 2*MV*totassets90*covb1b7 + 2*MV*totassets90*covb5b7 + 2*totassets90*(MV^2)*covb5b8 + 2*(totassets90^2)*MV*covb7b8) gen conse5=sqrt(varb1 + varb5*(MV^2) + varb7*(totassets95^2) + varb8*(MV^2)*(totassets95^2) + 2*MV*covb1b5 + 2*totassets95*covb1b7 + 2*MV*totassets95*covb1b7 + 2*MV*totassets95*covb5b7 + 2*totassets95*(MV^2)*covb5b8 + 2*(totassets95^2)*MV*covb7b8) gen conse6=sqrt(varb1 + varb5*(MV^2) + varb7*(totassetsmax^2) + varb8*(MV^2)*(totassetsmax^2) + 2*MV*covb1b5 + 2*totassetsmax*covb1b7 + 2*MV*NTAMax*covb1b7 + 2*MV*totassetsmax*covb5b7 + 2*totassetsmax*(MV^2)*covb5b8 + 2*(totassetsmax^2)*MV*covb7b8) gen t0=conb0/conse0gen t1=conb1/conse1gen t2=conb2/conse2gen t3=conb3/conse3gen t4=conb4/conse4gen t5=conb5/conse5gen t6=conb6/conse6gen consb0=conb0gen consb1=conb1gen consb2=conb2gen consb3=conb3gen consb4=conb4gen consb5=conb5gen consb6=conb6replace consb0 = . if abs(t0)<1.96replace consb1 = . if abs(t1)<1.96replace consb2 = . if abs(t2)<1.96replace consb3 = . if abs(t3)<1.96replace consb4 = . if abs(t4)<1.96replace consb5 = . if abs(t5)<1.96replace consb6 = . if abs(t6)<1.96generate str1 txt="*"graph twoway line conb0 MV, clpattern(shortdash) clwidth(thin) || scatter consb0 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb1 MV, clpattern(dot) clwidth(thin) || scatter consb1 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb2 MV, clpattern(solid) clwidth(thin) || scatter consb2 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb3 MV, clpattern(longdash) clwidth(thin) || scatter consb3 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb4 MV, clpattern(solid) clwidth(thin) || scatter consb4 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || line conb5 MV, clpattern(longdash) clwidth(thin) || scatter consb5 MV, mlabel(txt) msymbol(i) mlabsize(vsmall) mlabgap(-1.0) mlabposition(11) || , legend(off) xtitle(Exchange Rate Stability (1 = Most Stable), size(3)) ytitle(Marginal Effect of Regulator, size(3)) xsca(titlegap(2)) ysca(titlegap(4)) text(-0.125 0.80 "Total Assets = 95th percentile", justification(right) size(2.0)) text(-0.30 0.8 "Total Assets = Min - 75th percentile", justification(right) size(2.0)) text(-0.24 0.80 "Total Assets = 90th percentile", justification(right) size(2.0)) text(-.12 .10 "* p < 0.05", justification(left) size(2.0)) scheme(s2mono) graphregion(fcolor(white))graph export threewayISQRRlogeqass.eps,replace*****************************Lagged models************************************eststo: xtreg logtier1 Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtier1, cluster(country_num) feeststo: xtreg logtier1 Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtier1, cluster(country_num) feeststo: xtreg logtier1 Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtier1, cluster(country_num) feeststo: xtreg logeqass Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logeqass, cluster(country_num) feeststo: xtreg logeqass Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logeqass, cluster(country_num) feeststo: xtreg logeqass Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logeqass, cluster(country_num) feestout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear*******************************Total Capital Ratio*******************************eststo: xtreg logtotcap Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feestout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear*********************************Other Models******************************************Alt EMU Sov Int Rate Operationalization***eststo: xtreg logtier1 Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtier1 Regulator EMUa1995 EMUb1995 EMUc1995 REGxEMUa1995 REGxEMUb1995 REGxEMUc1995 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtier1 Regulator EMUa1995 EMUb1995 EMUc1995 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMUa1995 EMUb1995 EMUc1995 REGxEMUa1995 REGxEMUb1995 REGxEMUc1995 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logeqass Regulator EMUa1995 EMUb1995 EMUc1995 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feestout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear***Multilevel Specifications***eststo: xtmixed logtier1 Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)eststo: xtmixed logtier1 Regulator EMU1 EMU2 EMU3 ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)eststo: xtmixed logtier1 Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)eststo: xtmixed logeqass Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)eststo: xtmixed logeqass Regulator EMU1 EMU2 EMU3 ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)eststo: xtmixed logeqass Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets loggdpgrowth logdeflator CApergdp || country_num: || year:, mle covar(unstructured)estout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear***Tier1 + Tier2 Capital***eststo: xtreg logtotcap Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU REGxEMU ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxEMU1 REGxEMU2 REGxEMU3 ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feeststo: xtreg logtotcap Regulator EMU1 EMU2 EMU3 REGxERS NTAxERS REGxNTA REGxNTAxERS ka_open ers BankCrisis newtotassets gdpgrowth deflator CApergdp l.logtotcap, cluster(country_num) feestout, style(tex) cells(b(fmt(3)) p(par fmt(3))) stats(N r2 AIC BIC) legendeststo clear