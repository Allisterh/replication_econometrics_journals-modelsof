********************************************************************************
* This file: create Appendix Table 1
********************************************************************************

// preambles
set more off
set matsize 4000
clear all
macro drop _all

// set working directory
local path "~/Dropbox/Research/Oil_Transfer/prep_for_pub/REStat_data_code/"
cd `path'

// import project routines
do "code/project_routines.do"

cap log close
log using "results/appendix_table1.log", replace

********************************************************************************

cap program drop main
program main
    prepare_data
    create_apptable1
end

cap program drop prepare_data
program prepare_data
    run_the_accompanying_code
    drop_vars
    define_worker_industries
    define_occupations
    define_race
end

program run_the_accompanying_code
    // code automatically generated by IPUMS
    quietly: do raw_data/ipums.do
end

program drop_vars
    drop educd raced
end

program define_worker_industries
    gen coal_worker   = (ind1990 == 041)
    gen og_worker     = (ind1990 == 042)
end

program define_occupations
    // Define occupations in broad categories, based on occ1990
    //      Managerial and Professional (000-200)
    //      Technical, Sales, and Administrative (201-400)
    //      Service (401-470)
    //      Farming, Forestry, and Fishing (471-500)
    //      Precision Production, Craft, and Repairers (501-700)
    //      Operatives and Laborers (701-900)
    //      Non-occupational responses (900-999)
    gen occ     = .
    replace occ = 1 if inrange(occ1990, 0, 200)
    replace occ = 2 if inrange(occ1990, 201, 400)
    replace occ = 3 if inrange(occ1990, 401, 470)
    replace occ = 4 if inrange(occ1990, 471, 500)
    replace occ = 5 if inrange(occ1990, 501, 700)
    replace occ = 6 if inrange(occ1990, 701, 900)

    label define lbl_occ ///
        1 "Managerial and Professional" ///
        2 "Technical, Sales, and Administrative" ///
        3 "Service" ///
        4 "Farming, Forestry, and Fishing" ///
        5 "Precision Production, Craft, and Repairers" ///
        6 "Operatives and Laborers"
    label values occ lbl_occ
end

program define_race
    // define simplified race: white, black, other
    clonevar simp_race = race
    replace simp_race = 3 if inrange(race, 3, 9)

    label define lblb_simp_race ///
        1 "White" 2 "Black" 3 "Other Races"
    label values simp_race lblb_simp_race
end

********************************************************************************

cap program drop create_apptable1
program create_apptable1
    drop_obs
    categories_vars
    tab_demographics
end

cap program drop drop_obs
program drop_obs
    drop if age < 25
end

cap program drop categories_vars
program categories_vars
    // create age categories
    gen ageCat     = 1 if inrange(age, 25, 29)
    replace ageCat = 2 if inrange(age, 30, 39)
    replace ageCat = 3 if inrange(age, 40, 49)
    replace ageCat = 4 if inrange(age, 50, 100)
    label define lblAge ///
        1 "25-29" ///
        2 "30-39" ///
        3 "40-49" ///
        4 "50 and over"
    label values ageCat lblAge

    // create education categories
    gen eduCat       = 1 if inrange(educ, 0, 5) // less than high school
    replace eduCat   = 2 if educ == 6 // high school
    replace eduCat   = 3 if inrange(educ, 7, 9) // some college
    replace eduCat   = 4 if inrange(educ, 10, 11) // college+
    * replace eduCat   = 3 if inrange(educ, 7, 11) // more than high school
    label define lblEduc ///
        1 "< high school" ///
        2 "high school" ///
        3 "some college" ///
        4 "college and above" // 5 "more than high school"
    label values eduCat lblEduc
end

cap program drop func_tab
program func_tab
    args year modifier weight
    di _newline(2) "This tabulation: `year' `modifier'" // to mark the tabulations
    tab ageCat  if year   == `year' `modifier' `weight'
    tab eduCat  if year   == `year' `modifier' `weight'
    tab sex     if year   == `year' `modifier' `weight'
    tab simp_race if year == `year' `modifier' `weight'
    tab occ     if year   == `year' `modifier' `weight'
end

cap program drop tab_demographics
program tab_demographics
    // drop non-workers
    drop if wkswork2 == 0 // no missing value on wkswork2 variable

    // compare worker characteristics across industries
    foreach year in 1970 1990 2012 {
        func_tab `year' "" "[aw=perwt]"
        func_tab `year' "& og_worker   == 1" "[aw=perwt]"
        func_tab `year' "& coal_worker == 1" "[aw=perwt]"
    }
end

********************************************************************************

main

log close
exit
