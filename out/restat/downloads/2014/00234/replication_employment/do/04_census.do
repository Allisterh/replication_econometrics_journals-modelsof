/* REPLICATION FILES for the article:
Spillovers from High-Skill Consumption to Low-Skill Labor Markets 
Francesca Mazzolari and Giuseppe Ragusa
REStat, March 2013, 95(1), 74-86

do file: 04_census.do

Analysis by MSA's 
   This do file:
     1. Generate log e changes of relevant variables in msa80_90_00_05.dta (generated by 03_census.do)
     2. Merge (sectoral) employment (hours worked) and population (# of people) figures by MSA and year from msa80_90_00_05.dta to Dcityears.dta (generated using R)
     3. Generate reg_on_Dcityyears.dta 
     4. Run regressions
			Tables B.3a and B.3b (in the online Appendix B)
			Tables 2 and 3 (in the paper)
*/


* Set path to WORKING DIRECTORY
cd "~/scratch/rep"set more off/*1. Generate changes in employment by sector and educational group    ==============================================================*/use data/msa80_90_00_05.dta, clearset more off/* Generate socio-demographic characteristics of the msa-year population or workforce */* Population share of seniors gen pop_over65_sh= pop_over65/pop* Female labor force participation (females 16-65 who work over total females 16-65)gen lfp_female= work_pop_fem / pop_fem* College share in the workforcegen cs= emp_CG/emp* Ratio of college to non-college educated individuals in the workforcegen fbnonCGs=emp_fb_notCG/emp* Share of non-college population that is foreign-borngen a1624=emp16_24/emp* Generate city-level characteristics as of 1980foreach x in fbnonCGs a1624 pop_over65_sh cs lfp_female {gen `x'80_gen=`x'recode `x'80_gen *=0 if year~=1980by metaread, sort: egen `x'80=max(`x'80_gen)drop `x'80_gen}* Generate transformations of number of hours worked in home production services (HPS) or other sectors/* Log of number of hours */foreach y in pop16_65 pop16_65_notCG pop16_65_CG ///
    emp_HOME_ind emp_otherNT_ind emp_HOME_ind_notCG ///    emp_otherNT_ind_notCG emp_HOME_ind_CG emp_otherNT_ind_CG {    gen l`y'=log(`y')      }/* "Employment-population" ratio and Employment shares in different sectors */foreach y in emp emp_HOME_ind emp_otherNT_ind {    gen `y'_sh=`y'/emp}   gen emp_routine_sh=emp_routine/empforeach y in emp_HOME_ind_notCG emp_otherNT_ind_notCG {	gen `y'_sh=`y'/emp_notCG}foreach y in emp_HOME_ind_CG emp_otherNT_ind_CG {	gen `y'_sh=`y'/emp_CG}    * Generate employment shares in HPS and routine occupations as of 1980 */foreach x in emp_HOME_ind_sh emp_routine_sh {	gen `x'80_gen=`x'	recode `x'80_gen *=0 if year~=1980	by metaread, sort: egen `x'80=max(`x'80_gen)	drop `x'80_gen}/*  Generate variables in changes  ------------------------------*/    * Population and employment growthsort metaread yearforeach x in lpop16_65 lpop16_65_notCG lpop16_65_CG ///
	lemp_HOME_ind lemp_otherNT_ind lemp_HOME_ind_notCG   ///    lemp_otherNT_ind_notCG  lemp_HOME_ind_CG lemp_otherNT_ind_CG ///    emp_HOME_ind_sh  emp_HOME_ind_notCG_sh emp_HOME_ind_CG_sh   ///    pop_over65_sh cs fbnonCGs a1624 lfp_female                 ///{        /* changes between t and t+1 entered in record for t */        by metaread: gen D`x'=`x'[_n+1]-`x'        /* the third period is half the length of the first two */        quietly replace D`x'=2*D`x' if year==2000   }* Generate msa-hourly wage growth (change in log (mean or median) hourly wage)sort metaread yearforeach x in md_hrwg {    gen l`x'=log(`x')      by metaread: gen Dl`x'=l`x'[_n+1]-l`x'    quietly replace Dl`x'=2*Dl`x' if year==2000   }/* Percentage change in employment (# hours worked) NET OF percentage change in population (# of individuals)This approach addresses issues arising from changes in the definition of MSA's over time:
some MSA's might experience drops in population just because they lose areas!- SF-Oakland-Vallejo (7360) and Chicago-Gary-Lake (1600) lose more than 1 million residents in the 1980s*/gen Dnetlemp_HOME_ind = Dlemp_HOME_ind - Dlpop16_65gen Dnetlemp_HOME_ind_notCG = Dlemp_HOME_ind_notCG - Dlpop16_65_notCGgen Dnetlemp_HOME_ind_CG = Dlemp_HOME_ind_CG - Dlpop16_65_CGkeep if year==1980 | year==1990 | year==2000gen Decade=1 if year==1980replace Decade=2 if year==1990replace Decade=3 if year==2000sort Decade metareadsave data/tmp/msa80_90_00_05_merge.dta, replace/*2.   Merge changes in employment to wage percentile growth figures      =============================================================*/use data/Dcityears.dta, clear/*Generated using R:- restricted to 242 msa's that are defined in all years- codes for msa go from 1 to 242 (only labeled with census codes)  We now merge corresponding numerical census codes for "metaread"*/sort msajoinby msa using data/msa_metaread.dtasort Decade metareadmerge Decade metaread using data/tmp/msa80_90_00_05_merge.dtatab _mergedrop if _merge==2  /*obs. from using dataset (msa80_90_00_05_merge) only: msa's not not defined in all years */drop _merge/*
Weights:## w: sum of "lswt" by msa and year## w0: 1980-1990 difference weighted by sum of weights in 1980; 90-00 diff 
       weighted by sum of weights in 1990; 00-05 diff weighted 
       by sum of weights in 2000## w1: 1980-1990 difference weighted by sum of weights in 1990; 
       90-00 diff weighted by sum of weights in 2000; 00-05 diff weighted 
       by sum of weights in 2005## wm: differences of the 3 periods weighted by mean weights of 
       the 4 years: 1980, 90, 00, 05*/* Multiply third-period (2000-2005) variables by 2foreach x in Dp9010 Dp90 Dp10 Dwb90 Da1624 {replace `x'=`x'*2 if Decade==3}save data/reg_on_Dcityyears.dta, replace/* 3. Regressions of dy (change in employment) on dx (change in p90p10, p90 and wb90) 
    ===============================================================================*/
set more offgen dec90_00=(Decade==2)gen dec00_05=(Decade==3)/*Remarks:
Zm: instrument for Dp9010 or Dp90
    defined as the product between city occupational structure in 1980(occupational shares based on occ1990)
    and decadal mean wage growth by occupation at the national level
	in particular: to proxy for Dp90, use occupational structure of wage earners in the top decile
Since the 3rd period is half length of the previous two, 2000-2005 wage growth has been multiplied by 2
 *** above, also other variables have been multiplied by 2 
 
*//* Table B3.a: First Stage Regressions (for Dwb90) (See online Appendix B)*/* Column 1reg Dwb90 Zm dec90_00  dec00_05 [weight=wm], robust cluster(msa) * Column 2reg Dwb90 Zm dec90_00  dec00_05 Dlfp_female DfbnonCGs Da1624 ///
          Dpop_over65_sh Dcs[weight=wm], robust cluster(msa) * Column 3reg Dwb90 Zm dec90_00  dec00_05 Dlfp_female DfbnonCGs Da1624 Dpop_over65_sh ///
          Dcs Dlmd_hrwg [weight=wm], robust cluster(msa) * Column 4xi: reg Dwb90 Zm dec90_00 dec00_05 lfp_female80 fbnonCGs80 a162480 /// 
              pop_over65_sh80 cs80 i.region_max [weight=wm], robust cluster(msa)* Column 5xi: reg Dwb90 Zm dec90_00 dec00_05 lfp_female80 fbnonCGs80 a162480 /// 
        pop_over65_sh80 cs80 emp_HOME_ind_sh80 emp_routine_sh80 ///
        i.region_max [weight=wm], robust cluster(msa)/* Table B3.b: First Stage Regressions (for Dp9010 Dp9050 Dp90)  (See online Appendix B)*/* Column 1reg Dp9010 Zm dec90_00 dec00_05  [weight=wm], robust cluster(msa)* Column 2gen Dp9050 = Dp90 - Dp50 reg Dp9050 Zm dec90_00 dec00_05  [weight=wm], robust cluster(msa)* Column 3reg Dp90 Zm dec90_00 dec00_05  [weight=wm], robust cluster(msa)* Column 4reg Dp10 Zm dec90_00 dec00_05  [weight=wm], robust cluster(msa)/* Table 2 */* Column 1reg Dlemp_HOME_ind Dwb90 dec90_00 dec00_05  [weight=wm], robust cluster(msa)* Column 2reg Dlemp_HOME_ind Dwb90 dec90_00 dec00_05 Dlfp_female DfbnonCGs Da1624 ///
    Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)* Column 3ivreg Dlemp_HOME_ind (Dwb90= Zm) dec90_00 dec00_05  [weight=wm], robust cluster(msa)* Column 4ivreg Dlemp_HOME_ind (Dwb90= Zm) dec90_00 dec00_05 Dlfp_female DfbnonCGs /// 
      Da1624 Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)* Column 5ivreg Dlemp_HOME_ind (Dwb90= Zm) dec90_00 dec00_05 Dlfp_female DfbnonCGs ///
            Da1624 Dpop_over65_sh Dcs Dlmd_hrwg [weight=wm], robust cluster(msa)* Column 6xi: ivreg Dlemp_HOME_ind (Dwb90= Zm) dec90_00 dec00_05 lfp_female80 /// 
          fbnonCGs80 a162480 pop_over65_sh80 cs80 i.region_max ///
           [weight=wm], robust cluster(msa)* Column 7xi: ivreg Dlemp_HOME_ind (Dwb90= Zm) dec90_00 dec00_05 lfp_female80 ///
          fbnonCGs80 a162480 pop_over65_sh80 cs80 emp_HOME_ind_sh80 ///
          emp_routine_sh80 i.region_max [weight=wm], robust cluster(msa)/* Table 3 *//* Panel A */* Column 1foreach x in Dp9010 Dp9050 Dp90 {reg Dlemp_HOME_ind `x' dec90_00 dec00_05 Dlfp_female DfbnonCGs Da1624 /// 
					Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)}
* Column 2foreach x in Dp9010 Dp9050 Dp90 {ivreg Dlemp_HOME_ind (`x'= Zm)  dec90_00 dec00_05  Dlfp_female DfbnonCGs Da1624 ///
	  				 Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)}
* Columns 3-4foreach x in Dp9010 Dp9050 Dp90 {foreach y in notCG CG {ivreg Dlemp_HOME_ind_`y' (`x'= Zm) dec90_00 dec00_05 Dlfp_female DfbnonCGs ///
	  				Da1624 Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)   	}}/* Panels B through D */rename Demp_HOME_ind_notCG_sh Demp_HOME_ind_sh_notCG rename Demp_HOME_ind_CG_sh Demp_HOME_ind_sh_CG foreach z in Dnetlemp_HOME_ind Demp_HOME_ind_sh Dlemp_otherNT_ind {       foreach x in Dwb90 {    reg `z' `x' dec90_00 dec00_05 Dlfp_female DfbnonCGs Da1624 /// 
             Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)    ivreg `z' (`x'= Zm) dec90_00 dec00_05 Dlfp_female DfbnonCGs Da1624 ///
             Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)      foreach y in notCG CG {        ivreg `z'_`y' (`x'= Zm) dec90_00 dec00_05  Dlfp_female DfbnonCGs ///
                   Da1624 Dpop_over65_sh Dcs [weight=wm], robust cluster(msa)              }  }}