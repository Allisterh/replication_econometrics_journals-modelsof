/* REPLICATION FILES for the article:
Spillovers from High-Skill Consumption to Low-Skill Labor Markets 
Francesca Mazzolari and Giuseppe Ragusa
REStat, March 2013, 95(1), 74-86

do file: 01_census.do
  This do file prepares an individual level dataset (indiv80_90_00_05.dta) that pools extracts from 1980 (1%)- 1990(1%)-2000(5%) censuses and the 2005 ACS files   The sample is restricted to individuals older than 16 that do not live in institutional or non-institutional group quarters   The generated variables include flags for (1) the working sample ("worksamp"), (2) self-employed ("self_emp") and (3) the sample of wage earners   "wagesamp"==1 for salary workers with positive wage, positive hours worked and weeks worked last year 
  Other individual level variables include hourly wages and sector of employment; age, gender, education, race, hispanic origin and nativity  */****************************************************************************** Set path to WORKING DIRECTORY
cd ~/scratch/Rep
set more off/*Generate dataset of relevant variables from the 1% IPUMS samples of 1980 and 1990; a random 20% of the 5% IPUMS 2000 sample; and the 2005 ACS (1% national random sample) The choice of the files is motivated by availability of METROPOLITAN AREA of residence  1. in 1% extract of 2000 census, the smallest identifiable geographic unit is the Super-PUMA containing at least 400,000 persons  2. the 5% extract of 1980 and 1990 census are State samples; they privilege state identification over metropolitan area identification, that is, where the combination of state and MA would enable the identification of areas smaller than 100,000 population, these samples suppress the MA information. */use census/census80_90_00_05_fm22.dta, clearrecode year 0=2000 99=1990 98=1980 5=2005* Create 1% extract for 2000 (=20% of the 5% extract)set seed 4583sample 20 if year==2000* Adjust weights PERWT indicates how many persons in the U.S. population are represented by a given person in an IPUMS samplereplace perwt=perwt*5 if year==2000
* RESTRICT TO PEOPLE AGED 16 or morekeep if age>=16 
*Drop individuals living in (correctional or mental) institutions & non-institutional group quartersdrop if gqtype>=1 & gqtype<=5
/* Flag WORKING sample  - 16-65 years old  - drop non-workers, armed forces, unpaid family workers (classwkd==29)*/gen byte worksamp=0recode worksamp 0=1 if age<=65 & (empstatd>=10 & empstatd<=12) & (classwkd~=29)
*FLAG self-employedgen self_emp= (classwkd==13 | classwkd==14) & worksamp==1******************************************************************************** LABOR SUPPLY WEIGHT*****************************************************************************/*PERWT indicates how many persons in the U.S. population are represented by a given person in an IPUMS sampleIPUMS weights inflate the value of sample cases to reflect the number of individuals in the population  - In a 1% unweighted/flat sample (such as in 1980), the weights simply inflate the sample by a factor of 100  - In weighted samples (such as the 1990 and 2000 censuses), weights must be used to obtain nationally representative statistics for person-level analyses  - IPUMS samples from 1990, 2000, and the ACS retain the Census Bureau's original weights. About 0.3 percent of cases in the census samples have a PERWT of 0, due to the complex sample designsMultiply PERWT by an estimate of the NUMBER OF HOURS WORKED by the individual last year   - "uhrswork": usual number of hours worked per week last year  - "wkswork1": weeks worked last year*/gen lswt=perwt*(uhrswork)*(wkswork1)  if worksamp /*Flag WAGE sample. All "worksamp" of the above except:  - self-employed  - those with missing hours  - those with missing weeks  - those with missing wage earnings last year  - outlier wage observations*/gen byte wagesamp=worksampreplace wagesamp=0 if classwkd>=10 & classwkd<=14replace wagesamp=0 if wkswork1==0replace wagesamp=0 if incwage==0/*HOURLY WAGE (annual wage divided by weeks worked last year X usual hours per week)The variable "incwage" indicates each respondent's total pre-tax wage and salary income (that is, money received as an employee for the previous calendar year)The Universe is, both for Census 1990 and 2000, people 16 years old or moreTopcodes:   - 1980: $75,000  - 1990: $140,000 (Higher amounts expressed as state MEDIANS of values above $140,000)   - 2000: $175,000 (Higher amounts expressed as state MEANS of values above $175,000)  - 2005: $200,000 (Higher amounts expressed as state MEANS of values above $200,000)*/by year, sort: sum incwage if wagesampcount if incwage>=75000  & year==1980 & wagesampcount if incwage>=140000 & year==1990 & wagesampcount if incwage>=175000 & year==2000 & wagesampcount if incwage>=200000 & year==2005 & wagesamp/* Find outlier wage observations Top and bottom code wages */ gen hrwage=0 if wagesamp*** Year 1980 **** Multiply hourly wages of topcoded earners by 1.5replace incwag=1.5*incwag if incwag==75000 & year==1980 & wagesamp* Limit the max hourly wage (via truncation) to the 1.5 times the max annual income amount divided by 1,735(35 hours per week by 50 weeks per year)* This correction is meant to prevent part-time workers from having a higher feasible hourly wage than full-time workersscalar MAXWG80=(1.5*75000/(35*50))scalar list MAXWG80replace hrwage=incwag/(uhrswork*wkswork1) if year==1980 & wagesampreplace hrwage=MAXWG80 if hrwage>MAXWG80 & hrwage!=. & year==1980 & wagesamp replace hrwage=. if wagesamp==0 & year==1980sum hrwage if year==1980 [aw=lswt], detail*Save the the first percentile of hrwage from previous "summarize, det" commandscalar MINWG80=_result(16) scalar list MINWG80assert MINWG80>0*replace all wages below the first percentile with the first percentilereplace hrwage=MINWG80 if hrwage<MINWG80 & year==1980 & wagesamp  *** Year 1990 ***replace incwag=1.5*incwag if incwag>=140000 & year==1990  & wagesampscalar MAXWG90=(1.5*140000/(35*50))scalar list MAXWG90replace hrwage=incwag/(uhrswork*wkswork1) if year==1990 & wagesampreplace hrwage=MAXWG90 if hrwage>MAXWG90 & hrwage!=. & year==1990 & wagesampreplace hrwage=. if wagesamp==0 & year==1990sum hrwage if year==1990 [aw=lswt], detailscalar MINWG90=_result(16)scalar list MINWG90assert MINWG90>0replace hrwage=MINWG90 if hrwage<MINWG90 & year==1990 & wagesamp*** Year 2000 ***replace incwag=1.5*incwag if incwag>=175000 & year==2000 & wagesamp  scalar MAXWG00=(1.5*175000/(35*50))scalar list MAXWG00replace hrwage=incwag/(uhrswork*wkswork1) if year==2000 & wagesampreplace hrwage=MAXWG00 if hrwage>MAXWG00 & hrwage!=. & year==2000replace hrwage=. if wagesamp==0 & year==2000summ hrwage if year==2000 [aw=lswt], detailscalar MINWG00=_result(16)scalar list MINWG00assert MINWG00>0replace hrwage=MINWG00 if hrwage<MINWG00 & year==2000 & wagesamp*** Year 2005 ***replace incwag=1.5*incwag if incwag>=200000 & year==2005 & wagesampscalar MAXWG05=(1.5*200000/(35*50))scalar list MAXWG05replace hrwage=incwag/(uhrswork*wkswork1) if year==2005 & wagesampreplace hrwage=MAXWG05 if hrwage>MAXWG05 & hrwage!=. & year==2005replace hrwage=. if wagesamp==0 & year==2005summ hrwage if year==2005 [aw=lswt], detailscalar MINWG05=_result(16)scalar list MINWG05assert MINWG05>0replace hrwage=MINWG05 if hrwage<MINWG05 & year==2005 & wagesampreplace hrwage=. if wagesamp==0by year, sort: sum hrwage /*Adjustment for inflation: Consumer price Index adjustment factors for June of the appropriate year:==============================|1979	| 1989	| 1999 |  2004 ||2.60	| 1.52	| 1.13 |  1    |------------------------------*/gen hrwage_CPI04= hrwagereplace hrwage_CPI04= hrwage*2.60 if year==1980 replace hrwage_CPI04= hrwage*1.52 if year==1990replace hrwage_CPI04= hrwage*1.13 if year==2000****************************************************************************** Industries****************************************************************************See Table B1 in the On-line Appendix gen TR=(ind1990>=10  & ind1990<=32)  | ///                   /*Agriculture, Forestry and Fishery*/       (ind1990>=40  & ind1990<=50)  | ///                   /*Mining*/       (ind1990>=100 & ind1990<=392)   ///                   /*Manufacturing*/  if ind1990~=0 & ind1990~=992 & ind1990~=999      gen Agriculture_Mining=(ind1990>=10  & ind1990<=32)  | ///   /*Agriculture, Forestry and Fishery*/                       (ind1990>=40  & ind1990<=50)    ///   /*Mining*/if ind1990~=0 & ind1990~=992 & ind1990~=999gen Manufacturing=(ind1990>=100 & ind1990<=392)   ///        /*Manufacturing*/          if ind1990~=0 & ind1990~=992 & ind1990~=999gen CO= ind1990==60            ////                          /*Construction*/if ind1990~=0 & ind1990~=992 & ind1990~=999                          gen WT=(ind1990==400) | (ind1990>=410  & ind1990<=472)  | /// /*Trasportation, Communication and other Public Utilities*/       (ind1990>=500  & ind1990<=571)                     ///  /*Wholesale Trade*/   if ind1990~=0 & ind1990~=992 & ind1990~=999gen FI=(ind1990>=700 & ind1990<=712)   ///  /*Financial Services*/ if ind1990~=0 & ind1990~=992 & ind1990~=999gen BS=(ind1990==721)                | ///  /*Advertising*/       (ind1990==731)                | ///  /*Personnel Supply Services*/       (ind1990==732)                | ///  /*Computer and data processing Services*/               (ind1990==741)                | ///  /*Other Business Services*/       (ind1990==841)                | ///  /*Legal Services*/       (ind1990>=882 & ind1990<=893)   ///  /*Engineering, Accounting, Management, and other professional Services*/                if ind1990~=0 & ind1990~=992 & ind1990~=999gen ED=(ind1990>=842  & ind1990<=851)  | ///   /*Schools*/       (ind1990==860)                    ///   /*other educational services*/if ind1990~=0 & ind1990~=992 & ind1990~=999gen PA=(ind1990>=900 & ind1990<=932)  ///       /*Public Administration*/ if ind1990~=0 & ind1990~=992 & ind1990~=999*Non-traded jobs that substitute for home production activities*** follow Cordelia Reimers' suggestion to drop Protective and Detective services & Hotels and motelsgen HOME_ind=(ind1990==641)                | ///   /*Eating and Drinking Places*/                     (ind1990==722)                | ///   /*Services to dwellings and other Buildings*/             (ind1990==750)                | ///   /*Automobile parking and car washing*/             (ind1990>=751 & ind1990<=760) | ///   /*Automotive repair; electrical and other repair services*/                     (ind1990>=763 & ind1990<=791) | ///   /*Personal services except than in Hotels and other Lodging Places*/                              (ind1990>=862 & ind1990<=863)   ///   /*Child Care Services*/        if ind1990~=0 & ind1990~=992 & ind1990~=999*Other non-traded jobsgen otherNT_ind=(ind1990==401)                | ///  /*Bus Service and Urban Transit*/	          (ind1990==402)                | ///  /*Taxicab service*/                (ind1990>=580 & ind1990<=640) | ///  /*Retail Trade except Eating and Drinking Places */                 (ind1990>=642 & ind1990<=691) | ///  /*Retail Trade except Eating and Drinking Places */                     (ind1990==740)                | ///  /*Detective and protective Services*/                          (ind1990==742)                | ///  /*Automotive rental and leasing*/                        (ind1990>=800 & ind1990<=810) | ///  /*Entertainment and recreation Services*/                        (ind1990>=812 & ind1990<=840) | ///  /*Health Services*/                        (ind1990==852)                | ///  /*Libraries*/                        (ind1990==861)                | ///  /*Job training and vocational rehabilitation services */                   (ind1990>=870 & ind1990<=881)   ///  /*other Social Services*/         if ind1990~=0 & ind1990~=992 & ind1990~=999gen Hotels=(ind1990==761 | ind1990==762)gen assert=TR+CO+WT+FI+BS+PA+ED+HOME_ind+otherNT_ind+Hotelstab assertdrop assert*specific categories of HOME_indgen HOME_ind_eat = (ind1990==641)                 /*Eating and Drinking Places*/    gen HOME_ind_pers= (ind1990>=763 & ind1990<=791)  /*Personal services*/   gen HOME_ind_child=(ind1990>=862 & ind1990<=863)  /*Child Care Services*/  gen HOME_ind_other=(HOME_ind==1 & HOME_ind_eat==0 & HOME_ind_pers==0 & HOME_ind_child==0)******************************************************************************** Occupations*****************************************************************************gen HOME_occ=(occ1990>=405 & occ1990<=407) | ///     /*private hhs occupations*/              (occ1990>=415 & occ1990<=427) | ///     /*protective service occupations*/              (occ1990>=434 & occ1990<=444) | ///     /*food preparation and service occupations*/                   (occ1990>=448 & occ1990<=455) | ///     /*cleaning and building service occupations*/                (occ1990>=456 & occ1990<=469) | ///     /*personal service occupations*/                                    (occ1990==486)                | ///     /*gardeners*/              (occ1990==487)                | ///     /*animal caretakers (except on farms)*/              (occ1990==748)                | ///     /*laundry workers*/                                 (occ1990==875)                          /*garbage collectors*/gen otherNT_occ =(occ1990>=316 & occ1990<=323) | ///     /*information clerks*/                 (occ1990>=243 & occ1990<=283) | ///     /*sales occupations*/                 (occ1990>=445 & occ1990<=447) | ///     /*health service occupations*/                      (occ1990==764)                | ///     /*washing, cleaning and pickling machine operators*/                  (occ1990>=808 & occ1990<=813) | ///     /*bus & taxi cab drivers; parking lot attendants*/                 (occ1990>=875 & occ1990<=889)           /*freight, stock and material handlers*/******************************************************************************** EDUCATION*****************************************************************************/*For 1990, 2000 and 2005: "edu99" indicates the respondent's highest level of educational attainment0 Not applicable (less than 3 years old)1 No school completed2 Nursery school3 Kindergarten4 1st-4th grade 5 5th-8th grade6 9th grade7 10th grade8 11th grade9 12th grade, no diplom10 High school graduate11 Some college, no degr12 Associate degree, occ13 Associate degree, aca14 Bachelors degree15 Masters degree16 Professional degree17 Doctorate degree;*/* 4 Categoriesgen edu_4cat=educ99recode edu_4cat 0/9=1 10=2 11/13=3 14/17=4/*For 1980: "higraded" indicates the respondent's highest grade of schooling010 Didn't finish nursery school012 Attending nursery school013 Nursery school021 Didn't finish kindergarten022 Attending kindergarten023 Kindergarten031 Didn't finish 1st grade032 Attending 1st grade033 Elementary school:1st grade041 Didn't finish 2nd grade042 Attending 2nd grade043 2nd grade051 Didn't finish 3rd grade052 Attending 3rd grade.........141 Didn't finish 12th grade142 Attending 12th grade150 12th grade151 Didn't finish 1st year college152 Attending 1st year college160 College:1st year161 Didn't finish 2nd year162 Attending 2nd year170 2nd year171 Didn't finish 3rd year172 Attending 3rd year180 3rd year181 Didn't finish 4th year182 Attending 4th year190 4th year191 Didn't finish 5th year192 Attending 5th year200 5th year or more 201 Didn't finish 6th year202 Attending 6th year210 6th year or more211 Didn't finish 7th year212 Attending 7th year220 7th year221 Didn't finish 8th year222 Attending 8th year230 8th year or more8th year or more */recode edu_4cat .=1 if higraded<=142                 & year==1980   /*12th grade not completed*/recode edu_4cat .=2 if higraded==150                 & year==1980   /*12th grade completed*/recode edu_4cat .=3 if higraded>150 & higraded<=182  & year==1980   /*between 12th grade and 4th year of college NOT completed*/recode edu_4cat .=4 if higraded>=190                 & year==1980   /*4th year of college completed*/label define edu_4cat 1 HSdropout 2 HSdegree 3 someCollege 4 CollegeGraduatelabel values edu_4cat edu_4cat tab edu_4cat, gen(edu_4cat)rename edu_4cat1 HSdropout  rename edu_4cat2 HSdegree rename edu_4cat3 someCollege rename edu_4cat4 CollegeGraduategen PostGrad=(educ99>=15) if educ99~=.replace PostGrad=(higraded>=192) if year==1980 ******************************************************************************** NATIVITY*****************************************************************************gen foreign=(bpld>=15000) gen    foreign_5yrs_orless= foreignrecode foreign_5yrs_orless 1=0 if yrimmig~=980                                                                            & year==1980recode foreign_5yrs_orless 1=0 if yrimmig~=986 & yrimmig~=990                                                             & year==1990recode foreign_5yrs_orless 1=0 if yrimmig~=995 & yrimmig~=996 & yrimmig~=997 & yrimmig~=998 & yrimmig~=999 & yrimmig~=001 & year==2000recode foreign_5yrs_orless 1=0 if yrimmig~=001 & yrimmig~=002 & yrimmig~=003 & yrimmig~=004 & yrimmig~=005 & yrimmig~=006 & year==2005gen     foreign_10yrs_orless= .replace foreign_10yrs_orless=(bpld>=15000 & (yrimmig==974 | yrimmig>=980 ))                               if year==1980replace foreign_10yrs_orless=(bpld>=15000 & (yrimmig==981 | yrimmig>=984 | yrimmig==986 | yrimmig>=990 )) if year==1990                     replace foreign_10yrs_orless=(bpld>=15000 & (yrimmig==1 | yrimmig>=991))                                  if year==2000replace foreign_10yrs_orless=(bpld>=15000 & (yrimmig<=6 | yrimmig>=996))                                  if year==2005******************************************************************************** Other variables*****************************************************************************gen male=sex==1gen white=(race==1)gen black=(race==2)gen other_race=(race>=3)gen hispanic=(hispan>0)gen age16_24=(age<=24)gen age25_34=(age>=25 & age<=34)gen age35_44=(age>=35 & age<=44)gen age45_54=(age>=45 & age<=54)gen age16_65=(age>=16 & age<=65)gen age_over65=(age>65)keep year metaread statefip region ind1990 occ1990 age perwt worksamp  wagesamp age16_24 age25_34 age35_44 age45_54 age16_65 age_over65  hrwage_CPI04 ///
TR Agriculture_Mining Manufacturing CO WT FI BS ED PA HOME_ind Hotels otherNT_ind HOME_ind_eat HOME_ind_pers HOME_ind_child HOME_ind_other ///
HOME_occ otherNT_occ edu_4cat HSdropout HSdegree someCollege CollegeGraduate PostGrad foreign foreign_5yrs_orless foreign_10yrs_orless ///
male white black other_race hispanic lswtcompresslabel var year     "1980, 1990, 2000, 2005"label var metarea  "metropolitan area (if identified >0)"label var wagesamp "=1 if worker for wage"label var age      "age linear in (16-65)"label var age16_24 "dummy age 16-24" label var age25_34 "dummy age 25-34" label var age35_44 "dummy age 35-44" label var age45_54 "dummy age 45-54" label var age16_65 "dummy age 16-65"label var age_over65 "dummy age 65+" label var hrwage_CPI04 "hourly wage in $2004"label var TR       "employed in TRADED sectors" label var CO       "employed in CONSTRUCTION" label var WT       "employed in WHOLESALE TRADE, TRANSPORTATION, UTILITIES" label var FI       "employed in FINANCIAL, INSURANCE, REAL ESTATE SERVICES" label var BS       "employed in BUSINESS SERVICES" label var PA       "employed in GOVERNEMENT" label var ED       "employed in EDUCATION" label var HOME_occ "employed in HOME PRODUCTION MKT SUBSTITUTES jobs (based on occ1990)"label var HOME_ind "employed in HOME PRODUCTION MKT SUBSTITUTES jobs (based on ind1990)"label var Hotels   "empl. in personal serv. in hotels (ind1990=761/762)"label var otherNT_occ "employed in NT_occ but not in HOME_occ"label var otherNT_ind "employed in NT_ind but not in HOME_ind"label var HSdropout       "dummy for high-school dropouts"label var HSdegree        "dummy for high-school graduates"label var someCollege     "dummy for having some college education"label var CollegeGraduate "dummy for college graduates"label var PostGrad        "dummy for Master or Doctorate degree"label var edu_4cat        "HSD, HSG, CD, CG"label var foreign         "dummy for foreign-born"label var foreign_5yrs_orless "dummy for foreign-born entered 5 or fewer years ago"label var foreign_10yrs_orless "dummy for foreign-born entered 10 or fewer years ago"label var male            "dummy for males"label var white           "dummy for whites"label var black           "dummy for blacks"label var other_race      "dummy for asian or american indian"label var hispanic        "dummy for hispanic origin"label var lswt            "Labor supply weight perwt*(uhrswork)*(wkswork1)"save data/indiv80_90_00_05.dta, replace