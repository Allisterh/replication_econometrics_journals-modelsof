/* REPLICATION FILES for the article:
Spillovers from High-Skill Consumption to Low-Skill Labor Markets 
Francesca Mazzolari and Giuseppe Ragusa
REStat, March 2013, 95(1), 74-86
* 
do file: 01_cex.do
*/

/* 
This do file generates the dataset cex_diary04.dta that pools 4 quarters of 
data from FAMILY, MEMBER and EXPENDITURE files of the 2004 CEX Diary Survey
*/   

* set path for WORKING DIRECTORYcd "~/scratch/Rep/replication_consumption/"
* For the do file to run properly it is necessary to create a folder named "temp" in "WORKING DIRECTORY/dairy04/"
* This folder will store temporary datasets needed to build the final dataset used for the analysis
set more off************************************************************************************************************ A. generate relevant variables from FAMILY, MEMBER and EXPENDITURE files, and merge them, FOR EACH QUARTER************************************************************************************************************* LOOP BEGINS *** local i=1while `i'<=4 {**************************** FAMILY FILE *****************************Two records for each CU, one for each of the two weeks that the diary was compiled*"newid": 8 digit: the first 7 digits identify the CU (variable "cuid"), the eigth digit identifies the week (it is either 1 or 2)*contains CU characteristics and income as well as some characteristics for the reference person and the spouse*most of the information is also in the "member" files, but in different format (for each member!)use diary04/fmld04`i'.dta, clearkeep newid cuid weekn region bls_urbn state fam_size perslt18 persot64 fam_type no_earnr earncomp age_ref age2 educ_ref educa2 ///
empltyp1 empltyp2 hrsprwk1 hrsprwk2 marital1 occulis1 occulis2 ref_race race2 sex_ref sex2 wk_wrkd1 wk_wrkd2  finlwt21 ///fincbefm fwagexm finc_efm fwagexm_*INCOME IMPUTATION: starting on 2004, the CE has implemented multiple imputation of income data* fincbefm_ fwagexm_: flag variables for imputed incomedestring , replace* "finc_efm" and "fwagexm_" contain non-numeric characters and so cannot be destringed/* Variables to keep in mind:*** REFERENCE PERSON *** (here we could use MEMB files instead)*EDUCATION: educ_ref*NUMBER OF WEEKS WORKED in the last 12 months: wk_wrkd1*NUMBER OF HOURS USUALLY WORKED PER WEEK: hrsprwk1*** CU ****fincbefm: gross income*fwagexm: amount of gross wage and salary income for all CU members in the past 12 months (sum wagexm for all CU members from member file)*/sort newidsave diary04/temp/fmld04`i'_temp.dta, replace***************************** MEMBER FILE *******************************one record for each member of the CU in a certain week*so for each "newid" there might be multiple records*you need to sum or average observations by "newid" to get a file that can be merged with the "family" fileuse diary04/memd04`i'.dta, cleardestring, replacegen wage_ref_fromM = wagexm if cu_code1==1gen wage_sp_fromM  = wagexm if cu_code1==2gen edu_ref_fromM = educa if cu_code1==1gen edu_sp_fromM  = educa if cu_code1==2*to check consistency, define in MEMBER files variables that are also included in FAMILY files!gen age_ref_fromM = age if cu_code1==1gen age_sp_fromM  = age if cu_code1==2gen hrsperwk_ref_fromM = hrsperwk if cu_code1==1gen hrsperwk_sp_fromM  = hrsperwk if cu_code1==2gen wks_wrkd_ref_fromM = wks_wrkd if cu_code1==1gen wks_wrkd_sp_fromM  = wks_wrkd if cu_code1==2collapse (sum) wage_ref_fromM wage_sp_fromM edu_ref_fromM edu_sp_fromM age_ref_fromM age_sp_fromM hrsperwk_ref_fromM hrsperwk_sp_fromM wks_wrkd_ref_fromM wks_wrkd_sp_fromM, by(newid)sort newidsave diary04/temp/memd04`i'_temp.dta, replace****************************** EXPENDITURE FILE *******************************one record for each type of expenditure made by a CU*so for each "newid" there might be multiple records *you need to sum expenditures by "newid" to get a file that can be merged with the "family" fileuse diary04/expd04`i'.dta, cleardestring ucc, replace*** NON-TRADED SERVICES (see Table A1 in the online Appendix)***# delimit;gen food_away = cost if(ucc>=190111 & ucc<=190116)	|	/* Lunch     at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */(ucc>=190211 & ucc<=190216)	|	/* Dinner    at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */(ucc>=190311 & ucc<=190316)	|	/* Snacks    at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */(ucc>=190321 & ucc<=190326);	/* Breakfast at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */# delimit;gen food_away_full_service = cost ifucc==190112	|	/* Lunch     at Full Service*/ucc==190212 |	/* Dinner    at Full Service */ucc==190312 |	/* Snacks    at Full Service */ucc==190322 ;	/* Breakfast at Full Service */# delimit;gen drink_away = cost if(ucc>=200511 & ucc<=200516)	|	/* Beer     at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */(ucc>=200521 & ucc<=200526)	|	/* Wine    at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */(ucc>=200531 & ucc<=200536);	/* Other Alchoolic beverages at Fast Food, Full Service, Vending Machine, Employer, Board, Catered Affairs */gen drink_away_full_service = cost ifucc==200512 	|	/* Beer                        at Full Service */ucc==200522 	|	/* Wine                        at Full Service */ucc==200532 ; 	    /* Other Alchoolic Beverage    at Full Service */gen repair_maintain= cost if(ucc==230000)	|	/* Repair, maintenance and improvements for built-in dishwasher, garbage disposal and range hood */(ucc==230110)	|	/* Maintenance of property */(ucc==270210)   | 	/* Water and sewerage maintenance */(ucc==270410)   | 	/* Garbace, trash collection */(ucc==270900)   | 	/* Septic tank cleaning*/(ucc==340610)   | 	/* REPAIR OF TV/RADIO/SOUND EQUIP */(ucc==340620)   | 	/* REPAIR OF HOUSEHOLD APPLIANCES */(ucc==340630)   | 	/* REUPHOLSTERY OF FURNITURE */(ucc==340903)   |   /* MISC. HOME SERVICES and small repair jobs not already identified */(ucc==340913)   |   /* REPAIR OF MISC HSHLD EQ/FSHGS */(ucc==440110)   |   /* SHOE REPAIR, OTH SHOE SERVICE */(ucc==440130)   |   /* ALTER/REPAIR OF APPAREL, ACCESS */(ucc==440150);      /* WATCH AND JEWELRY REPAIR */gen auto_repair= cost if(ucc==490000)   |   /* MISC. AUTO REPAIR/SERVICING */     (ucc==490110)   |   /* BODY WORK AND PAINTING */(ucc==490211)   |   /* CLUTCH, TRANSMISSION REPAIR */(ucc==490212)   |   /* DRIVE SHAFT AND REAR-END REPAIR */(ucc==490220)   |   /* BRAKE WORK (DIARY Q961 NEW) */(ucc==490231)   |   /* REPAIR TO STEERING OR FRONT END */(ucc==490232)   |   /* REPAIR TO ENGINE COOLING SYSTEM */(ucc==490311)   |   /* MOTOR TUNE-UP */(ucc==490312)   |   /* LUBE, OIL CHANGE AND OIL FILTERS */(ucc==490313)   |   /* FRNT END ALIGN, WHEEL BAL/ROTAT */(ucc==490314)   |   /* SHOCK ABSORBER REPLACEMENT */(ucc==490315)   |   /* BRAKE ADJUSTMENT */(ucc==490316)   |   /* GAS TANK REPAIR,REPLACEMENT */(ucc==490411)   |   /* EXHAUST SYSTEM REPAIR */(ucc==490412)   |   /* ELECTRICAL SYSTEM REPAIR */(ucc==490413);      /* MOTOR REPAIR/REPLACEMENT */      gen delivery= cost if(ucc==340120);  /* DELIVERY SERVICES*/gen housekeeping=cost if (ucc==340310)   | 	/* DOMESTIC SERVICE: housekeeping, cleaning, maid service, cooking,...*/(ucc==340410)   | 	/* GARDENING/LAWN CARE SERVICE */(ucc==340510)   | 	/* MOVING, STORAGE, FREIGHT EXPRESS */(ucc==340520)   | 	/* HSHLD LNDRY,DRYCLN NOT COIN-OPerated */(ucc==440210);      /* APPAREL LNDRY/DRY CLNG N/COIN-OP */gen babysitting=cost if (ucc==340210);   	/*  BABYSITTING */gen care_elderly=cost if (ucc==340906);  	/*  CARE OF INVALIDS, ELDERLY, ETC */gen city_transportation= cost if (ucc==530210)   | 	/* INTERCITY BUS FARES */(ucc==530311)   | 	/*  INTRACITY MASS TRANSIT FARES */(ucc==530412)   | 	/*  TAXI FARES AND LIMOUSINE SERVICE */(ucc==530510)   | 	/*  INTERCITY TRAIN FARES */(ucc==530901)   | 	/*  SHIP FARES */(ucc==530902)   | 	/*  SCHOOL BUS */(ucc==530903);   	/*  CAR/VAN POOL & NON-MOTOR TRANS */gen taxi_service= cost if (ucc==530412);   	/*  TAXI FARES AND LIMOUSINE SERVICE */gen personal_care= cost if (ucc==650110)   | 	/* personal care services for females, including haircuts */(ucc==650210);   	/* personal care services for men, including haircuts */# delimit cr*** TOTAL EXPENDITURES ***gen tot_expenditure = cost if (ucc>= 1000 & ucc<=  999900)collapse (sum) food_away drink_away food_away_full_service drink_away_full_service repair_maintain auto_repair ///
delivery housekeeping babysitting care_elderly city_transportation taxi_service personal_care tot_expenditure, by(newid)sort newidsave diary04/temp/expd04`i'_temp.dta, replace*** MERGE DATASETS ****use diary04/temp/fmld04`i'_temp.dta, clearsort newidsave diary04/temp/fmld04`i'_temp.dta, replacemerge newid using diary04/temp/memd04`i'_temp.dtadrop if _merge==1 /*observation from master data only*/drop _mergesort newidsave diary04/temp/fmld04`i'_temp.dta, replacemerge newid using diary04/temp/expd04`i'_temp.dtadrop if _merge==1 /*observation from master data only*/drop _merge*for a few CUs the age and education of the reference person and the spouse change between week 1 and 2 *for one CU also fam_type change*this should not be the case given that these demographic characteristics are stable over two weeks (!) and that they are collected only once (during initial visit)*keep only first valuesort cuidegen tag=tag(cuid)recode tag 0=.foreach x in age_ref age2 educ_ref educa2 fam_type {replace `x'=`x'* tag }collapse (mean) age_ref age2 bls_urbn earncomp educ_ref educa2 empltyp1 empltyp2 fam_size fam_type finlwt21 hrsprwk1 hrsprwk2 marital1 no_earnr occulis2 perslt18 persot64 occulis1 race2 ref_race region sex_ref sex2 weekn wk_wrkd1 wk_wrkd2 state fincbefm fwagexm ///         (mean) wage_ref_fromM wage_sp_fromM edu_ref_fromM edu_sp_fromM age_ref_fromM age_sp_fromM hrsperwk_ref_fromM hrsperwk_sp_fromM wks_wrkd_ref_fromM wks_wrkd_sp_fromM ///         (sum) food_away drink_away food_away_full_service drink_away_full_service repair_maintain auto_repair delivery housekeeping babysitting care_elderly city_transportation taxi_service personal_care tot_expenditure  ///, by(cuid)* you cannot collapse (mean) finc_efm fwagexm_ because they are string variablesforeach x in food_away drink_away food_away_full_service drink_away_full_service repair_maintain auto_repair delivery housekeeping babysitting care_elderly city_transportation taxi_service personal_care tot_expenditure {*proxy for MONTHLY expendituresreplace `x'=`x'*2.16 if weekn==2  /*in the survey for two weeks*/replace `x'=`x'*4.32 if weekn==1  /*in the survey for one week*/}*Generate expenditure sharesforeach x in food_away drink_away food_away_full_service drink_away_full_service repair_maintain auto_repair delivery city_transportation taxi_service housekeeping babysitting care_elderly personal_care {gen `x'_sh= `x' / tot_expenditure}gen year=2004gen quarter=`i'save diary04/temp/file04`i'_temp.dta, replacelocal i=`i'+1}** LOOP ENDS ********************************************************************************************************B. Append merged FAMILY/EXPENDITURE files for each quarter into one yearly file****************************************************************************************************use diary04/temp/file041_temp.dta, clearappend using diary04/temp/file042_temp.dtaappend using diary04/temp/file043_temp.dtaappend using diary04/temp/file044_temp.dta*compare age of reference person and spouse from FAMILY and MEMBER file*drop "anomalies"*in the FAMILY file: "age_ref" has different values in two consecutive weeks: the reference person (respondent) must have changed, and these cases are hard to deal withgen integ=int(age_ref_fromM)gen diff= age_ref_fromM- integdrop if diff~=0 drop integ diff age_ref_fromM age_sp_fromM*in the FAMILY file: "perslt18" and/or "persot64" have different values in two consecutive weeksgen integ=int(perslt18)gen diff= perslt18 - integdrop if diff~=0 drop integ diff gen integ=int(persot64)gen diff= persot64 - integdrop if diff~=0 drop integ diff save diary04/cex_diary04.dta, replace 