*******************************************************************************************************************************************MANUSCRIPT: Authorized Generic Entry prior to Patent Expiry: Reassessing Incentives for Independent Generic Entry *AUTHOR:     Silvia Appelt, University of Munich, silvia.appelt@lrz.uni-muenchen.de******************************************************************************************************************************************				                                *** ECONOMETRIC ANALYSIS ***						            		* Date last edit:  11 January 2015 * ******************************************************************************************************************************************   version 13.0set more offcap log closeclear ****** (I) DESCRIPTIVESlocal x=1while `x'<3 {*** TABLE 1: Generic Entry Opportunities (2002-2007)sort sub_no_gentry_expegen sub_no_gentry_entry=group(sub_no_gentry_exp) if ind_generic_entry_exp==1sum sub_no_gentry_entryby sub_no_gentry_exp, sort: egen help=min(sub_no_gentry_entry) by sub_no_gentry_exp, sort: replace sub_no_gentry_entry=help if sub_no_gentry_entry== .drop helpsummarize sub_no_gentry_entry egen sub_weight1=tag(sub_no_gentry_exp)egen sub_weight2=tag(sub_no_gentry_entry)egen sub_weight3=tag(sub_no_gentry_exp) if sub_no_gentry_entry== . & sub_no_gentry_exp!= .egen sub_weight4=tag(sub_no_gentry_entry) if ag_entry_dum==1egen sub_weight5=tag(sub_no_gentry_entry) if ag_entry_dum==0 local x=1while `x' < 6 {tabstat pre_market_size2 if sub_weight`x'==1, stat(mean median min max sd N)tabstat monopoly_effdur if sub_weight`x'==1, stat(mean median min max sd N) tabstat atc3_rxsubstitutes_g if sub_weight`x'==1, stat(mean median min max sd N)tabstat atc3_rxsubstitutes_b if sub_weight`x'==1, stat(mean median min max sd N)local x=`x'+1}*** TABLE 2: Data Set Construction*Number of potential entrants per druglocal x=1while `x' < 6 {tabstat total_entrants if sub_weight`x'==1, stat(mean median min max sd N)local x=`x'+1}*Number of generic entrants per druglocal x=1while `x' < 6 {tabstat entrants if sub_weight`x'==1, stat(mean median min max sd N)local x=`x'+1}**Zero-entries per druglocal x=1while `x' < 6 {tabstat zero_entrants if sub_weight`x'==1, stat(mean median min max sd N)local x=`x'+1}sum entrant_no count if ind_generic_entry_exp==0 count if ind_generic_entry_exp==0 & ge_entry_dum==1count if ind_generic_entry_exp==0 & ge_entry_dum==0count if ind_generic_entry_exp==1 *** WEB APPENDIX [B]*Data - Summary Statisticstabstat ind_generic_entry_exp, stat(mean median min max sd N)tabstat ag_entry_dum, stat(mean median min max sd N) tabstat pre_market_size2, stat(mean median min max sd N)tabstat ln_pre_market_size2, stat(mean median min max sd N) tabstat monopoly_effdur, stat(mean median min max sd N) tabstat atc3_rxsubstitutes_g, stat(mean median min max sd N)tabstat atc3_rxsubstitutes_b, stat(mean median min max sd N) tabstat atc3_exp2, stat(mean median min max sd N)tabstat nfc3_exp2, stat(mean median min max sd N)tabstat n_drugnewclass1, stat(mean median min max sd N) tabstat n_drugnewclass1n, stat(mean median min max sd N) tabstat small, stat(mean median min max sd N) tabstat medium, stat(mean median min max sd N) tabstat large, stat(mean median min max sd N) tabstat rx_switch, stat(mean median min max sd N) tabstat sgp_all, stat(mean median min max sd N) tabstat p_lit, stat(mean median min max sd N) sum atc1_* nfc1_* oral_dum parenteral_dum topical_dumlocal x=`x'+1}****** (II) ECONOMETRIC ANALYSISlocal x=1while `x'<3 {use npi_human_biprobit_firms`x'_final.dta, clear*** TABLE 3. Univariate Probit - Coefficients probit ind_generic_entry_exp ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum, robust cluster(producer_no) *incl. instrumentprobit ind_generic_entry_exp ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum n_drugnewclass1n ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum, robust cluster(producer_no) *** TABLE 4: Recursive Bivariate Probit - Coefficients - UNRESTRICTED MODELbiprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)*** TABLE 5: Univariate and Recursive Bivariate Probit (Average Marginal Effects/AME and Marginal Effects at Mean/MEM) - UNRESTRICTED MODEL*16 drug markets with authorized generic entry*Univariate Probitquietly probit ind_generic_entry_exp ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum, robust cluster(producer_no) margeff if ag_entry_dum==1*Bivariate Probitquietly biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)gen ag_entry_dum1=1gen ag_entry_dum0=0predict xb1, xb1predict xb2, xb2gen xb1_w=[ind_generic_entry_exp]_b[_cons]+[ind_generic_entry_exp]_b[ln_pre_market_size2]*ln_pre_market_size2+[ind_generic_entry_exp]_b[monopoly_effdur]*monopoly_effdur+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g]*atc3_rxsubstitutes_g+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b]*atc3_rxsubstitutes_b+[ind_generic_entry_exp]_b[atc3_exp2]*atc3_exp2+[ind_generic_entry_exp]_b[nfc3_exp2]*nfc3_exp2+[ind_generic_entry_exp]_b[year2003]*year2003+ [ind_generic_entry_exp]_b[year2004]*year2004+ [ind_generic_entry_exp]_b[year2005]*year2005+[ind_generic_entry_exp]_b[year2006]*year2006+[ind_generic_entry_exp]_b[year2007]*year2007+[ind_generic_entry_exp]_b[atc1_1]*atc1_1+[ind_generic_entry_exp]_b[atc1_3]*atc1_3+[ind_generic_entry_exp]_b[atc1_4]*atc1_4+[ind_generic_entry_exp]_b[atc1_5]*atc1_5+[ind_generic_entry_exp]_b[atc1_6]*atc1_6+[ind_generic_entry_exp]_b[atc1_7]*atc1_7+[ind_generic_entry_exp]_b[atc1_9]*atc1_9+[ind_generic_entry_exp]_b[atc1_10]*atc1_10+[ind_generic_entry_exp]_b[atc1_11]*atc1_11+[ind_generic_entry_exp]_b[parenteral_dum]*parenteral_dum+[ind_generic_entry_exp]_b[topical_dum]*topical_dumgen xb1_0=[ind_generic_entry_exp]_b[_cons]+[ind_generic_entry_exp]_b[ln_pre_market_size2]*ln_pre_market_size2+[ind_generic_entry_exp]_b[monopoly_effdur]*monopoly_effdur+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g]*atc3_rxsubstitutes_g+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b]*atc3_rxsubstitutes_b+[ind_generic_entry_exp]_b[atc3_exp2]*atc3_exp2+[ind_generic_entry_exp]_b[nfc3_exp2]*nfc3_exp2+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum0+[ind_generic_entry_exp]_b[year2003]*year2003+ [ind_generic_entry_exp]_b[year2004]*year2004+ [ind_generic_entry_exp]_b[year2005]*year2005+[ind_generic_entry_exp]_b[year2006]*year2006+[ind_generic_entry_exp]_b[year2007]*year2007+[ind_generic_entry_exp]_b[atc1_1]*atc1_1+[ind_generic_entry_exp]_b[atc1_3]*atc1_3+[ind_generic_entry_exp]_b[atc1_4]*atc1_4+[ind_generic_entry_exp]_b[atc1_5]*atc1_5+[ind_generic_entry_exp]_b[atc1_6]*atc1_6+[ind_generic_entry_exp]_b[atc1_7]*atc1_7+[ind_generic_entry_exp]_b[atc1_9]*atc1_9+[ind_generic_entry_exp]_b[atc1_10]*atc1_10+[ind_generic_entry_exp]_b[atc1_11]*atc1_11+[ind_generic_entry_exp]_b[parenteral_dum]*parenteral_dum+[ind_generic_entry_exp]_b[topical_dum]*topical_dumgen xb1_1=[ind_generic_entry_exp]_b[_cons]+[ind_generic_entry_exp]_b[ln_pre_market_size2]*ln_pre_market_size2+[ind_generic_entry_exp]_b[monopoly_effdur]*monopoly_effdur+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g]*atc3_rxsubstitutes_g+[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b]*atc3_rxsubstitutes_b+[ind_generic_entry_exp]_b[atc3_exp2]*atc3_exp2+[ind_generic_entry_exp]_b[nfc3_exp2]*nfc3_exp2+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum1+[ind_generic_entry_exp]_b[year2003]*year2003+ [ind_generic_entry_exp]_b[year2004]*year2004+ [ind_generic_entry_exp]_b[year2005]*year2005+[ind_generic_entry_exp]_b[year2006]*year2006+[ind_generic_entry_exp]_b[year2007]*year2007+[ind_generic_entry_exp]_b[atc1_1]*atc1_1+[ind_generic_entry_exp]_b[atc1_3]*atc1_3+[ind_generic_entry_exp]_b[atc1_4]*atc1_4+[ind_generic_entry_exp]_b[atc1_5]*atc1_5+[ind_generic_entry_exp]_b[atc1_6]*atc1_6+[ind_generic_entry_exp]_b[atc1_7]*atc1_7+[ind_generic_entry_exp]_b[atc1_9]*atc1_9+[ind_generic_entry_exp]_b[atc1_10]*atc1_10+[ind_generic_entry_exp]_b[atc1_11]*atc1_11+[ind_generic_entry_exp]_b[parenteral_dum]*parenteral_dum+[ind_generic_entry_exp]_b[topical_dum]*topical_dum*Covariates evaluated at mean valueslocal varlist xb1_0 xb1_1 xb1_w xb2 ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 year2003 year2004 /// year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum n_drugnewclass1nquietly foreach var in `varlist' {cap drop `var'm}local varlist ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 year2003 year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum n_drugnewclass1nquietly foreach var in `varlist' {sum `var' if ag_entry_dum==1, dlocal m=r(mean)gen `var'm=`m'sum `var', dsum `var'm, d}local varlist xb1_0 xb1_1 xb1_w xb2quietly foreach var in `varlist' {sum `var' if ag_entry_dum==1, dlocal m=r(mean)gen `var'm=`m'}*Pre-Entry Market Size*AME quietly quietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[ln_pre_market_size2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[ln_pre_market_size2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[ln_pre_market_size2] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(xb2m)*normal((xb1_1m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[ln_pre_market_size2] ///+normalden(xb1_0m)*normal((-1)*(xb2m -e(rho)*xb1_0m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(-xb2m)*normal((xb1_0m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[ln_pre_market_size2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2m)*[ag_entry_dum]_b[ln_pre_market_size2] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**Monopoly Duration*AMEquietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[monopoly_effdur] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[monopoly_effdur]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[monopoly_effdur] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(xb2m)*normal((xb1_1m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[monopoly_effdur] ///+normalden(xb1_0m)*normal((-1)*(xb2m -e(rho)*xb1_0m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(-xb2m)*normal((xb1_0m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[monopoly_effdur]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2m)*[ag_entry_dum]_b[monopoly_effdur] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**OFF-PATENT Rx Substitutes (ATC3) *AMEquietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_g] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_g]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[atc3_rxsubstitutes_g] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(xb2m)*normal((xb1_1m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_g] ///+normalden(xb1_0m)*normal((-1)*(xb2m -e(rho)*xb1_0m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(-xb2m)*normal((xb1_0m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_g]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2m)*[ag_entry_dum]_b[atc3_rxsubstitutes_g] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**ON-PATENT Rx Substitutes (ATC3) *AMEquietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_b] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_b]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[atc3_rxsubstitutes_b] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(xb2m)*normal((xb1_1m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_b] ///+normalden(xb1_0m)*normal((-1)*(xb2m -e(rho)*xb1_0m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(-xb2m)*normal((xb1_0m-e(rho)*xb2m)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_b]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2m)*[ag_entry_dum]_b[atc3_rxsubstitutes_b] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**ATC3 Experience *AMEquietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2] ///+normalden(xb1_0m) *normal((-1)*(xb2m -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**NFC3 Experiencequietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(normalden(xb1_1m) *normal((xb2m -e(rho)*xb1_1m)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2] ///+normalden(xb1_0m) *normal((-1)*(xb2m -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2]) if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**Authorized Generic Entry*AMEquietly predictnl phat_diff=(binormal(xb1_w+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum1, xb2, e(rho))/ normal(xb2))-(binormal(xb1_w+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum0, -xb2, -e(rho))/normal(-xb2)) if ag_entry_dum==1, se(phat_diff_se) force quietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=(binormal(xb1_wm+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum1, xb2m, e(rho))/ normal(xb2m))-(binormal(xb1_wm+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum0, -xb2m, -e(rho))/normal(-xb2m)) if ag_entry_dum==1, se(phat_diff_se) force quietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**#Non-Rx Drugs/Products launched within one year prior to LoE*AMEquietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[n_drugnewclass1n] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**MEMquietly predictnl phat_diff=normalden(xb2m)*[ag_entry_dum]_b[n_drugnewclass1n] if ag_entry_dum==1, se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**** WEB APPENDIX [D]: Recursive Bivariate Probit - LR Test (RESTRICTED vs UNRESTRICTED MODEL)biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)estimates store biprobit_restrlocal ll_res=e(ll)display `ll_res'quietly biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)estimates store biprobit_unrestr1lrtest biprobit_restr biprobit_unrestr1, forcelocal ll_unres1=e(ll)display `ll_unres1'local LR=-2*(`ll_res'-`ll_unres1')display `LR'*** WEB APPENDIX [E]: ROBUSTNESS CHECK (1): Interaction effects and brand strategy controls *Market size interaction effects *Pre-entry market sizegen ag_entry_pm=ag_entry_dum*ln_pre_market_size2biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ag_entry_pm ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)*Small, medium vs. large drug market sizegen ag_entry_s=ag_entry_dum*smallgen ag_entry_m=ag_entry_dum*mediumif `x'!=2 {biprobit (ind_generic_entry_exp=small medium monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ag_entry_s ag_entry_m ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=small medium monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)}else if `x'==2 {biprobit (ind_generic_entry_exp=small medium monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ag_entry_s ag_entry_m ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=small medium monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)}*Alternative band strategies:tab substances if rx_switch==1tab substances if sgp_all==1tab substances if p_lit==1biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 rx_switch sgp_all p_lit ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)*** WEB APPENDIX [F]: ROBUSTNESS CHECK (2): Univariate and Recursive Bivariate Probit (Average Marginal Effects) and 2SLS estimation*Full sample (73 drug markets)*Univariate Probitquietly probit ind_generic_entry_exp ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum, robust cluster(producer_no) margeff*Bivariate Probitquietly biprobit (ind_generic_entry_exp=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ag_entry_dum ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 parenteral_dum topical_dum) ///(ag_entry_dum=ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b n_drugnewclass1n year2004 year2005 year2006 year2007 ///atc1_1 atc1_3 atc1_4 atc1_5 atc1_11), diff robust cluster(producer_no)*Pre-Entry Market Size quietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[ln_pre_market_size2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[ln_pre_market_size2] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[ln_pre_market_size2]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[ln_pre_market_size2], se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**Monopoly Durationquietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[monopoly_effdur] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[monopoly_effdur] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[monopoly_effdur]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[monopoly_effdur], se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**OFF-PATENT Rx Substitutes (ATC3) quietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_g] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_g] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_g]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[atc3_rxsubstitutes_g], se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**ON-PATENT Rx Substitutes (ATC3) quietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(xb2) *normal((xb1_1-e(rho)*xb2)/sqrt(1-(e(rho))^2))*[ag_entry_dum]_b[atc3_rxsubstitutes_b] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_rxsubstitutes_b] ///+normalden(-xb2) *normal((xb1_0-e(rho)*xb2)/sqrt(1-(e(rho))^2))*(-1)*[ag_entry_dum]_b[atc3_rxsubstitutes_b]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat*quietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[atc3_rxsubstitutes_b], se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**ATC3 Experience quietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[atc3_exp2]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**NFC3 Experiencequietly predictnl phat_diff=(normalden(xb1_1) *normal((xb2 -e(rho)*xb1_1)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2] ///+normalden(xb1_0) *normal((-1)*(xb2 -e(rho)*xb1_0)/sqrt(1-(e(rho))^2))*[ind_generic_entry_exp]_b[nfc3_exp2]), se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**Authorized Generic Entryquietly predictnl phat_diff=(binormal(xb1_w+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum1, xb2, e(rho))/ normal(xb2))-(binormal(xb1_w+[ind_generic_entry_exp]_b[ag_entry_dum]*ag_entry_dum0, -xb2, -e(rho))/normal(-xb2)), se(phat_diff_se) force sum phat_diff*quietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**#Non-Rx Drugs/Products launched within one year prior to LoEquietly predictnl phat_diff=normalden(xb2)*[ag_entry_dum]_b[n_drugnewclass1n], se(phat_diff_se) forcequietly sum phat_diff, dlocal ame=r(mean)display `ame'quietly sum phat_diff_se, dlocal ame_se=r(mean)display `ame_se'drop phat**2SLS Regression - Coefficientsivregress 2sls ind_generic_entry_exp ln_pre_market_size2 monopoly_effdur atc3_rxsubstitutes_g atc3_rxsubstitutes_b atc3_exp2 nfc3_exp2 ///year2003 year2004 year2005 year2006 year2007 atc1_1 atc1_3 atc1_4 atc1_5 atc1_6 atc1_7 atc1_9 atc1_10 atc1_11 ///(ag_entry_dum=n_drugnewclass1n), first robust cluster(producer_no)local x=`x'+1 }*** end of do file