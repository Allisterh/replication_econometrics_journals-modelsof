[
  {
    "id": "comment",
    "value": "*** Uses first filter: complete balanced sample **",
    "line": 1,
    "column": 1
  },
  {
    "id": "comment",
    "value": "** Seminnual observations, local currency **",
    "line": 3,
    "column": 1
  },
  {
    "id": "comment",
    "value": "** Part 3",
    "line": 5,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      =============================     Pesaran (2006, Econometrica) CCEMG , CCEP and IRF, VD  (based on Cholesky Decp.)    ===============================",
    "line": 7,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 8,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//        The purposes of this program are:  (1) compute CCEP estimators of a 3 variables ECM model;  (2) construct the IRF of different shocks  (3) variance Decomposition",
    "line": 9,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 10,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                CCEP is the  estiamtor of Pesaran (2006, Econometrica)",
    "line": 11,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                IRF  and VD are constructed based on Cholesky decomposition",
    "line": 12,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//     ",
    "line": 13,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      VECM(1) Model:   ds(ij, t)_k = a1(ij)_k + b(ij)_k*q(ij,t-1)_k +bb(ij)_a*q(ij,t-1)+ b1(ij)_k*ds(ij,t-1)_k +b2(ij)_k*dp(ij,t-1)_k+b3(ij)_k*dp(ij,t-1)+ ea(ij,t)_k.           ij=1,...,N; k=1,,,,K;  t=1,...,T.",
    "line": 14,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                      dp(ij, t)_k = a2(ij)_k + c(ij)_k*q(ij,t-1)_k +cc(ij)_a*q(ij,t-1)+ c1(ij)_k*ds(ij,t-1)_k +c2(ij)_k*dp(ij,t-1)_k+c3(ij)_k*dp(ij,t-1)+ ea(ij,t)_k.           ij=1,...,N; k=1,,,,K;  t=1,...,T.",
    "line": 15,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                       dp(ij, t) = a3(ij)_k + d(ij)_k*q(ij,t-1)_k +dd(ij)_a*q(ij,t-1)+ d1(ij)_k*ds(ij,t-1)_k +d2(ij)_k*dp(ij,t-1)_k+d3(ij)_k*dp(ij,t-1)+ ea(ij,t)_k.              ij=1,...,N; k=1,,,,K;  t=1,...,T.",
    "line": 16,
    "column": 1
  },
  {
    "id": "comment",
    "value": "// ",
    "line": 17,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 18,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      Regression equation:      ds(ij, t)_k = a1(ij)_k + b(ij)_k*q(ij,t-1)_k +bb(ij)_a*q(ij,t-1)+ b1(ij)_k*ds(ij,t-1)_k +b2(ij)_k*dp(ij,t-1)_k+b3(ij)_k*dp(ij,t-1)+ ",
    "line": 19,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                 +g1(ij)_k*ds_bar(t)_k + g2(ij)_k*q_bar(t-1)_k+ g3(ij)_k*ds_bar(t-1)_k +  g4(ij)_k*dp_bar(t-1)_k + g5(ij)_k*q_bar(t-1)+  g6(ij)_k*dp_bar(t-1) +va(ij,t)_k   ",
    "line": 20,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                             dp(ij, t)_k = a2(ij)_k + c(ij)_k*q(ij,t-1)_k +cc(ij)_a*q(ij,t-1)+ c1(ij)_k*ds(ij,t-1)_k +c2(ij)_k*dp(ij,t-1)_k+c3(ij)_k*dp(ij,t-1)+ ",
    "line": 21,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                 +h1(ij)_k*dp_bar(t)_k + h2(ij)_k*q_bar(t-1)_k+ h3(ij)_k*ds_bar(t-1)_k +  h4(ij)_k*dp_bar(t-1)_k + h5(ij)_k*q_bar(t-1)+  h6(ij)_k*dp_bar(t-1) +va(ij,t)_k   ",
    "line": 22,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                             dp(ij, t) = a3(ij)_k + d(ij)_k*q(ij,t-1)_k +dd(ij)_a*q(ij,t-1)+ d1(ij)_k*ds(ij,t-1)_k +d2(ij)_k*dp(ij,t-1)_k+d3(ij)_k*dp(ij,t-1)+ ",
    "line": 23,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                 +j1(ij)_k*dp_bar(t)+ j2(ij)_k*q_bar(t-1)+ j3(ij)_k*ds_bar(t-1)_k +  j4(ij)_k*dp_bar(t-1)_k + j5(ij)_k*q_bar(t-1)+  j6(ij)_k*dp_bar(t-1) +va(ij,t)_k   ",
    "line": 24,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 25,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                              where s_k, p_k and q_k are nominal exchange rate, price differential and real exchange rate for commodity k. respectively.",
    "line": 26,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                          p and q are aggregate price differential and real exchange rate. respectively.",
    "line": 27,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 28,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      NOTE:",
    "line": 29,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                       (1) the original order of the variables is ek, pk, p and it is now (ek, p, pk)",
    "line": 30,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                       (2) if you want to change the order then you also need to change the following part of the program",
    "line": 31,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                             The order of variables is now (ek, p, pk) ",
    "line": 32,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                    (a)",
    "line": 33,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                           *****   Let Y=(ek, p, pk) then the Y varaibale in the above VECM model in vector form must have the same order on both sides.  ",
    "line": 34,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                       This means that the regressors on the right hand side of the fist equation must be  de(ij,t-1)_k, dp(ij,t-1) and dp(ij,t-1)_k.  (This is important and do not forget to change the order ) .  ",
    "line": 35,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                        Do the same changes for the second and third equations",
    "line": 36,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 37,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                    (b) you need to change the following codes:",
    "line": 38,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 matrix coeff_`k'=(bp1',bp2',bp3',vc[1,1],vc[2,2],vc[3,3],vc[2,1],vc[3,1],vc[3,2])'       -----  order  (ek, pk, p)",
    "line": 39,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                          ",
    "line": 40,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 matrix coeff_`k'=(bp1[1,1],bp1[2,1],bp1[3,1],bp1[5,1],bp1[4,1],bp3[1,1],bp3[2,1],bp3[3,1],bp3[5,1],bp3[4,1],bp2[1,1],bp2[2,1],bp2[3,1],bp2[5,1],bp2[4,1],vc[1,1],vc[3,3],vc[2,2],vc[3,1],vc[2,1],vc[3,2])'      ",
    "line": 41,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                                                                                                                                ------ order  (ek, p, pk)",
    "line": 42,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                   (c) change the definition of beta ",
    "line": 43,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                 beta=(1,1)\\(-1,0)\\(0,-1)          --------    order (ek, pk, p)",
    "line": 44,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                                 beta=(1, 1)\\(0,-1)\\(-1, 0)       --------    order (ek, p, pk)",
    "line": 45,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                   (d)  girff[.,(vars+1)]=girff[.,1]-girff[.,2]     --- qk response if the order is (ek, pk, p) ;           girff[.,(vars+2)]=girff[.,1]-girff[.,3]     --- q response if the order is (ek, pk, p)",
    "line": 46,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                       girff[.,(vars+1)]=girff[.,1]-girff[.,3]     --- qk response if the order is (ek, p, pk) ;           girff[.,(vars+2)]=girff[.,1]-girff[.,2]     --- q response if the order is (ek, p, pk)",
    "line": 47,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                   (e)  st_store(.,st_addvar(\"double\", (\"girff_ek\",\"girff_pk\",\"girff_p\",\"girff_q\",\"girff_qk\")),xxx)    --------  order (ek, pk, p)",
    "line": 48,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                         st_store(.,st_addvar(\"double\", (\"girff_ek\",\"girff_p\",\"girff_pk\",\"girff_q\",\"girff_qk\")),xxx)    --------  order (ek, p, pk)",
    "line": 49,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                   (f)  the following codes are under the order (ek, p, pk).  If the order is changed then you need to change the \"definition\"  in the following codes",
    "line": 50,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//",
    "line": 51,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                               \"Variance Decomposition is explained by: ek, p and pk\"",
    "line": 52,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 VD ",
    "line": 53,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 st_store(.,st_addvar(\"double\", (\"VD_ek\",\"VD_p\",\"VD_pk\")),VD)    // Variance Decomposition:  explained by: e, p and pk ",
    "line": 54,
    "column": 1
  },
  {
    "id": "comment",
    "value": "// ",
    "line": 55,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 end",
    "line": 56,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 if (`shock'==1){",
    "line": 57,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 line girff_e girff_p girff_pk girff_q girff_qk horizon,saving(girff, replace)  xlabel(0(20)`h') ytitle(\"Response to an E Shock\") legend(c(1))  ",
    "line": 58,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 }",
    "line": 59,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                else if (`shock'==2){",
    "line": 60,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                line girff_e girff_p girff_pk girff_q girff_qk horizon,saving(girff, replace)  xlabel(0(20)`h') ytitle(\"Response to an P Shock\") legend(c(1))  ",
    "line": 61,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                }",
    "line": 62,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 else if (`shock'==3){",
    "line": 63,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 line girff_e girff_p girff_pk girff_q girff_qk horizon,saving(girff, replace)  xlabel(0(20)`h') ytitle(\"Response to an Pk Shock\") legend(c(1))  ",
    "line": 64,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//                                                 }",
    "line": 65,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//     ",
    "line": 66,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      Software:  STAT",
    "line": 67,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//      Provider:  Jyh-Lin Wu ",
    "line": 68,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//     =============================================================================================================",
    "line": 69,
    "column": 1
  },
  {
    "id": "comment",
    "value": "// Program modified by Andy Cohn, April 2009",
    "line": 70,
    "column": 1
  },
  {
    "id": "comment",
    "value": "//   3_var_CCEP estimates",
    "line": 71,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*** Note: this file uses the Indust cutdown sample: i.e. (industrial country)/(US) pairs",
    "line": 73,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*** This program runs a variant of the estimation file wherein the qks are replaced by qk-Q",
    "line": 74,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*** i.e. demeaned by pair average price differential",
    "line": 75,
    "column": 1
  },
  {
    "command": {
      "id": "identifier",
      "value": "matrix",
      "line": 77,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "drop",
        "line": 77,
        "column": 8
      },
      {
        "id": "identifier",
        "value": "_all",
        "line": 77,
        "column": 13
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "clear",
      "line": 78,
      "column": 1
    }
  },
  {
    "command": {
      "id": "identifier",
      "value": "clear",
      "line": 79,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "results",
        "line": 79,
        "column": 7
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "clear",
      "line": 80,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "mata",
        "line": 80,
        "column": 7
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "log",
      "line": 81,
      "column": 9
    },
    "pre": [
      {
        "command": {
          "id": "identifier",
          "value": "capture",
          "line": 81,
          "column": 1
        }
      }
    ],
    "varlist": [
      {
        "id": "identifier",
        "value": "close",
        "line": 81,
        "column": 13
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 82,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "more",
        "line": 82,
        "column": 5
      },
      {
        "id": "identifier",
        "value": "off",
        "line": 82,
        "column": 10
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 83,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "mem",
        "line": 83,
        "column": 5
      },
      {
        "id": "number",
        "value": "700m",
        "line": 83,
        "column": 9
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 84,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "varabbrev",
        "line": 84,
        "column": 5
      },
      {
        "id": "identifier",
        "value": "off",
        "line": 84,
        "column": 15
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 89,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "programpath",
        "line": 89,
        "column": 7
      },
      {
        "id": "string",
        "value": "\"P:\\BerginGlickWu Replication\\Figures 1-5\\programs\"",
        "line": 89,
        "column": 19
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 90,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "outpath1",
        "line": 90,
        "column": 7
      },
      {
        "id": "string",
        "value": "\"P:\\BerginGlickWu Replication\\Figures 1-5\\results\"",
        "line": 90,
        "column": 16
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 91,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "datapath",
        "line": 91,
        "column": 7
      },
      {
        "id": "string",
        "value": "\"P:\\BerginGlickWu Replication\\data_creation\\datasets\"",
        "line": 91,
        "column": 16
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "global",
      "line": 93,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "datasetPWT",
        "line": 93,
        "column": 8
      },
      {
        "id": "string",
        "value": "\"semiannual_lc_newPT3_PWT_f1_wide_indust.dta\"",
        "line": 93,
        "column": 19
      }
    ]
  },
  {
    "id": "comment",
    "value": "/* Load the relevant variables of the datasets by product type, run the regresssions, \n   store the results in matrix, then open up the next product dataset.\n*/",
    "line": 96,
    "column": 1
  },
  {
    "command": {
      "id": "identifier",
      "value": "program",
      "line": 97,
      "column": 9
    },
    "pre": [
      {
        "command": {
          "id": "identifier",
          "value": "capture",
          "line": 97,
          "column": 1
        }
      }
    ],
    "varlist": [
      {
        "id": "identifier",
        "value": "drop",
        "line": 97,
        "column": 17
      },
      {
        "id": "identifier",
        "value": "_all",
        "line": 97,
        "column": 22
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "cd",
      "line": 99,
      "column": 1
    },
    "varlist": [
      {
        "id": "string",
        "value": "\"`programpath'\"",
        "line": 99,
        "column": 4
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 100,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "maxvar",
        "line": 100,
        "column": 5
      },
      {
        "id": "number",
        "value": "30000",
        "line": 100,
        "column": 12
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 101,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "matsize",
        "line": 101,
        "column": 5
      },
      {
        "id": "number",
        "value": "5000",
        "line": 101,
        "column": 13
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 103,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "tsobs",
        "line": 103,
        "column": 7
      }
    ],
    "=": [
      {
        "id": "number",
        "value": "35",
        "line": 103,
        "column": 15
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 104,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "numgoods",
        "line": 104,
        "column": 7
      }
    ],
    "=": [
      {
        "id": "number",
        "value": "101",
        "line": 104,
        "column": 18
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 105,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "numpairs",
        "line": 105,
        "column": 7
      }
    ],
    "=": [
      {
        "id": "number",
        "value": "20",
        "line": 105,
        "column": 18
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 106,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "nirp",
        "line": 106,
        "column": 7
      }
    ],
    "=": [
      {
        "id": "number",
        "value": "40",
        "line": 106,
        "column": 14
      }
    ]
  },
  {
    "id": "comment",
    "value": "**************************************************",
    "line": 107,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*\t\t\t\t\t\t *",
    "line": 108,
    "column": 1
  },
  {
    "id": "comment",
    "value": "****************** Traded Goods ******************",
    "line": 109,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*\t\t\t\t\t\t *",
    "line": 110,
    "column": 1
  },
  {
    "id": "comment",
    "value": "**************************************************",
    "line": 111,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*",
    "line": 115,
    "column": 1
  },
  {
    "id": "comment",
    "value": "************* Seminnual - Traded - PW - Filter 1 ************",
    "line": 116,
    "column": 1
  },
  {
    "id": "comment",
    "value": "*",
    "line": 117,
    "column": 1
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 119,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "filename",
        "line": 119,
        "column": 7
      },
      {
        "id": "string",
        "value": "\"ecm_newPT3_semiannual_PW_f1_indust.csv\"",
        "line": 119,
        "column": 16
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "local",
      "line": 120,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "irfcoeffs",
        "line": 120,
        "column": 7
      },
      {
        "id": "string",
        "value": "\"irfcoeffs_semiannual_PW_f1_indust.dta\"",
        "line": 120,
        "column": 17
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "matrix",
      "line": 122,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "avg_stat1_",
        "line": 122,
        "column": 8
      }
    ],
    "=": [
      {
        "id": "identifier",
        "value": "J",
        "line": 122,
        "column": 21
      },
      {
        "id": "number",
        "value": "101",
        "line": 122,
        "column": 23
      },
      {
        "id": ",",
        "value": ",",
        "line": 122,
        "column": 26
      },
      {
        "id": "number",
        "value": "47",
        "line": 122,
        "column": 27
      },
      {
        "id": ",",
        "value": ",",
        "line": 122,
        "column": 29
      },
      {
        "id": "identifier",
        "value": ".",
        "line": 122,
        "column": 30
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "matrix",
      "line": 123,
      "column": 1
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "avg_stat2_",
        "line": 123,
        "column": 8
      }
    ],
    "=": [
      {
        "id": "identifier",
        "value": "J",
        "line": 123,
        "column": 21
      },
      {
        "id": "number",
        "value": "101",
        "line": 123,
        "column": 23
      },
      {
        "id": ",",
        "value": ",",
        "line": 123,
        "column": 26
      },
      {
        "id": "number",
        "value": "47",
        "line": 123,
        "column": 27
      },
      {
        "id": ",",
        "value": ",",
        "line": 123,
        "column": 29
      },
      {
        "id": "identifier",
        "value": ".",
        "line": 123,
        "column": 30
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "use",
      "line": 125,
      "column": 2
    },
    "varlist": [
      {
        "id": "string",
        "value": "\"`datapath'/$datasetPWT\"",
        "line": 125,
        "column": 6
      }
    ],
    "options": [
      {
        "id": "identifier",
        "value": "clear",
        "line": 125,
        "column": 32
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "ccep_semiannual_ecm_newPT3",
      "line": 126,
      "column": 2
    },
    "options": [
      {
        "id": "identifier",
        "value": "group",
        "line": 126,
        "column": 30
      },
      {
        "id": "`'",
        "value": "`numpairs'",
        "line": 126,
        "column": 36
      },
      {
        "id": "identifier",
        "value": "goods",
        "line": 126,
        "column": 48
      },
      {
        "id": "`'",
        "value": "`numgoods'",
        "line": 126,
        "column": 54
      },
      {
        "id": "identifier",
        "value": "nirp",
        "line": 126,
        "column": 66
      },
      {
        "id": "`'",
        "value": "`nirp'",
        "line": 126,
        "column": 71
      },
      {
        "id": "identifier",
        "value": "tsobs",
        "line": 126,
        "column": 79
      },
      {
        "id": "`'",
        "value": "`tsobs'",
        "line": 126,
        "column": 85
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "preserve",
      "line": 128,
      "column": 2
    }
  },
  {
    "command": {
      "id": "identifier",
      "value": "drop",
      "line": 129,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "irf_",
        "line": 129,
        "column": 7
      },
      {
        "id": "*",
        "value": "*",
        "line": 129,
        "column": 11
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "outsheet",
      "line": 130,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "using",
        "line": 130,
        "column": 11
      },
      {
        "id": "string",
        "value": "\"$outPath1/`filename'\"",
        "line": 130,
        "column": 17
      }
    ],
    "options": [
      {
        "id": "identifier",
        "value": "comma",
        "line": 130,
        "column": 41
      },
      {
        "id": "identifier",
        "value": "replace",
        "line": 130,
        "column": 47
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "restore",
      "line": 131,
      "column": 2
    }
  },
  {
    "command": {
      "id": "identifier",
      "value": "keep",
      "line": 133,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "irf_",
        "line": 133,
        "column": 7
      },
      {
        "id": "*",
        "value": "*",
        "line": 133,
        "column": 11
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "save",
      "line": 134,
      "column": 2
    },
    "varlist": [
      {
        "id": "string",
        "value": "\"`datapath'/`irfcoeffs'\"",
        "line": 134,
        "column": 7
      }
    ],
    "options": [
      {
        "id": "identifier",
        "value": "replace",
        "line": 134,
        "column": 33
      }
    ]
  },
  {
    "id": "comment",
    "value": "*Can't use normal IRF files to calculate: have qk-Q instead of q, this changes the cointegration",
    "line": 135,
    "column": 3
  },
  {
    "command": {
      "id": "identifier",
      "value": "set",
      "line": 136,
      "column": 10
    },
    "pre": [
      {
        "command": {
          "id": "identifier",
          "value": "capture",
          "line": 136,
          "column": 2
        }
      }
    ],
    "varlist": [
      {
        "id": "identifier",
        "value": "obs",
        "line": 136,
        "column": 14
      },
      {
        "id": "`'",
        "value": "`nirp'",
        "line": 136,
        "column": 18
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "gen",
      "line": 137,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "paramater",
        "line": 137,
        "column": 6
      }
    ],
    "=": [
      {
        "id": "identifier",
        "value": ".",
        "line": 137,
        "column": 18
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "replace",
      "line": 138,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "paramater",
        "line": 138,
        "column": 10
      }
    ],
    "=": [
      {
        "id": "`'",
        "value": "`nirp'",
        "line": 138,
        "column": 22
      }
    ],
    "in": [
      {
        "id": "number",
        "value": "2",
        "line": 138,
        "column": 34
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "forvalues",
      "line": 139,
      "column": 2
    },
    "varlist": [
      {
        "id": "identifier",
        "value": "j",
        "line": 139,
        "column": 12
      }
    ],
    "=": [
      {
        "id": "number",
        "value": "1",
        "line": 139,
        "column": 14
      },
      {
        "id": "/",
        "value": "/",
        "line": 139,
        "column": 15
      },
      {
        "id": "`'",
        "value": "`numgoods'",
        "line": 139,
        "column": 16
      },
      {
        "id": "{",
        "value": "{",
        "line": 139,
        "column": 27
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "di",
      "line": 140,
      "column": 3
    },
    "varlist": [
      {
        "id": "string",
        "value": "\"Calculating impulse responses for good `j'\"",
        "line": 140,
        "column": 6
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "irf_newPT3_cvd_v2",
      "line": 141,
      "column": 11
    },
    "pre": [
      {
        "command": {
          "id": "identifier",
          "value": "quietly",
          "line": 141,
          "column": 3
        }
      }
    ],
    "options": [
      {
        "id": "identifier",
        "value": "good",
        "line": 141,
        "column": 30
      },
      {
        "id": "`'",
        "value": "`j'",
        "line": 141,
        "column": 35
      },
      {
        "id": "identifier",
        "value": "nirp",
        "line": 141,
        "column": 40
      },
      {
        "id": "`'",
        "value": "`nirp'",
        "line": 141,
        "column": 45
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "save",
      "line": 144,
      "column": 2
    },
    "varlist": [
      {
        "id": "string",
        "value": "\"`datapath'/`irfcoeffs'\"",
        "line": 144,
        "column": 7
      }
    ],
    "options": [
      {
        "id": "identifier",
        "value": "replace",
        "line": 144,
        "column": 33
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "log",
      "line": 147,
      "column": 9
    },
    "pre": [
      {
        "command": {
          "id": "identifier",
          "value": "capture",
          "line": 147,
          "column": 1
        }
      }
    ],
    "varlist": [
      {
        "id": "identifier",
        "value": "close",
        "line": 147,
        "column": 13
      }
    ]
  },
  {
    "command": {
      "id": "identifier",
      "value": "exit",
      "line": 149,
      "column": 1
    }
  }
]